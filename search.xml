<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>机器学习导论(四)|决策树</title>
      <link href="/Medipole/Blog/2025/03/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AF%BC%E8%AE%BA-%E5%9B%9B-%E5%86%B3%E7%AD%96%E6%A0%91/"/>
      <url>/Medipole/Blog/2025/03/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AF%BC%E8%AE%BA-%E5%9B%9B-%E5%86%B3%E7%AD%96%E6%A0%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 机器学习导论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习导论(五)|神经网络</title>
      <link href="/Medipole/Blog/2025/03/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AF%BC%E8%AE%BA-%E4%BA%94-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
      <url>/Medipole/Blog/2025/03/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AF%BC%E8%AE%BA-%E4%BA%94-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1>1.神经元模型</h1><blockquote><p>神经网络是由具有适应性的简单单元组成的广泛并行互连的网络，它的组织能够模拟生物神经系统对真实世界物体所作出的交互反应</p></blockquote><p>在这个模型中，神经元接收到来自其他n个神经元传递过来的输入信号，这些输入信号通过<strong>带权重的连接</strong>进行传递，神经元接收到的总输入值将与神经元的阀值进行比较，然后通过“<strong>激活函数</strong>”处理产生神经元的输出。<br><img src="https://raw.githubusercontent.com/Medipole/image-repo/master/20250319/5ece5b8868da46114e5b8befcc226c92.png" alt="M-P神经元模型"><br>阶跃函数不连续、不光滑，因此常用Sigmoid函数作为激活函数。<br><img src="https://raw.githubusercontent.com/Medipole/image-repo/master/20250319/0ec3b9f3d786b98c2ba5d5421e831712.png" alt="典型的神经元激活函数"></p><h1>2.感知机与多层网络</h1><h2 id="1-感知机">(1)感知机</h2><h3 id="①感知机组成">①感知机组成</h3><p>感知机由两层神经元组成：</p><ul><li><p>输入层接受信号传递至输出层，输出层是M-P神经元----“阈值逻辑单元”</p></li><li><p>感知机可以容易地实现逻辑与、或、非<br>注意到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></msub><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = f(\sum_{i=1}w_ix_i-\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>是阶跃函数<br>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1\land x_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>θ</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">w_1 = w_2 = 1,\theta = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span><br>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>∨</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1\vee x_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>θ</mi><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">w_1 = w_2 = 1,\theta = 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span></span></span></span><br>非<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">¬</mi><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>:</mo><mtext>令 </mtext><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><mo>−</mo><mn>0.6</mn><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>θ</mi><mo>=</mo><mo>−</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">(\neg x_1): \text{令 } w_1 = -0.6, w_2 = 0, \theta = -0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">¬</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord text"><span class="mord cjk_fallback">令</span><span class="mord"> </span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord">0.6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.5</span></span></span></span></p></li></ul><h3 id="②感知机学习">②感知机学习</h3><p>更一般的，权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和阈值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>可以通过学习得到.</p><blockquote><p>将阈值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>看作一个固定输入为-1.0的“哑结点”所对应的连接权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">w_{n+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>，则权重和阈值的学习统一为权重的学习</p></blockquote><p>感知机的学习规则：对训练样例(x,y)，若当前感知机输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span>，则做如下调整</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>←</mo><msub><mi>w</mi><mi>i</mi></msub><mo>+</mo><mi mathvariant="normal">Δ</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">Δ</mi><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mi>η</mi><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}w_{i}\leftarrow w_{i}+\Delta w_{i} \\\Delta w_{i}=\eta(y-\hat{y})x_{i}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>(0,1)称为学习率</p><p>注意： ①感知机只有输出层神经元进行激活函数处理<br>②若两类模式是线性可分的，则感知机的学习过程一定会收敛<br>③若两类模式线性不可分，则感知机的学习过程发生振荡(fluctuation)<br><img src="https://raw.githubusercontent.com/Medipole/image-repo/master/20250319/f2ee6e5970c4bdbabebc5c9389455a4d.png" alt="线性可分的 “与”“或”“非”问题与非线性可分的“异或问题”"></p><h2 id="2-多层网络">(2)多层网络</h2><p><strong>要解决非线性可分问题</strong>，需要考虑使用多层功能神经元<br><img src="https://raw.githubusercontent.com/Medipole/image-repo/master/20250319/d974c88626a2ecef79a97522d25cd789.png" alt="能解决异或问题的两层感知机"><br>输出层与输入居之层的神经元，被称为隐含层(hidden layer),隐含层输出层神经元都是拥有激活函数的功能神经元.<br>更一般的，常见的神经网络是形如下图所示的层级结构，每层神经元与下一层神经元全互连，神经元之间不存在同层连接，也不存在跨层连接 这样的神经网络结构常常称为&quot;多层前馈神经网络&quot;.<br><img src="https://raw.githubusercontent.com/Medipole/image-repo/master/20250319/cdd2ad218b741b8660a8ce67629942dc.png" alt="多层前馈神经网络结构示意图"></p><h1>3.误差逆传播算法(BP算法)</h1><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>l</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mi>l</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o_l=f(a_l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></strong></p><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub><msub><mi>o</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>a</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_lo_{l-1}=a_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial z^{(k)}}{\partial b^{(k)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4561em;vertical-align:-0.3854em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0707em;"><span style="top:-2.6146em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3854em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习导论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab基础(六)程序设计</title>
      <link href="/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E5%85%AD-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
      <url>/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E5%85%AD-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">TOC</a></p><h1>一、M文件</h1><h2 id="1-M文件的类型">1.M文件的类型</h2><p>用MATLAB语言编写的程序，称为M文件。 M文件可以根据调用方式的不同分为两类：</p><ul><li>脚本文件（命令文件） (Script File)</li><li>函数文件(Function File)</li></ul><h3 id="①脚本文件">①脚本文件</h3><p>将原本要在MATLAB环境下直接输入的多条语句，存放为.m后缀的文件，在命令行键入文件名，替代多条语句，一次执行成批命令。</p><h3 id="②函数文件">②函数文件</h3><p>以固定格式书写的程序代码，第一行是函数定义行，有输入参数和输出参数，由function引导；函数中的变量一般是局部变量，也可以声明全局变量；</p><ul><li><p>函数m文件的格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab&#123;.line-numbers&#125;">function  [ 输出形参 ] = 函数名[ 输入形参 ]<br>%注释<br>内容<br></code></pre></td></tr></table></figure><p>==注意==：函数文件名要和主函数的名字一致</p><pre><code class="hljs">                  输入形参以圆括号（）表示，输出形参以方括号[]表示（注：输出形参为一个的时候可以不用[]）</code></pre><p>如果<code>a=function[x,y,z]</code>        ,则默认输出第一个输出形参<br>可以<code>[~,b]=function[x,y,z]</code>,来输出第二个输出形参<br>即：通过<code>~</code>符号，忽略函数返回的某个参数。<br> </p></li><li><p>函数m文件的调用格式<br>[输出实参表]=函数名(输入实参表)<br> </p></li><li><p>函数变量<br>函数内部产生的是局部变量，除非特殊说明为全局变量，局部变量会在函数调用完毕后随函数的结束而清除。<br>声明一个变量为全局变量：<code>global  变量1，变量2</code><br> </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[output]</span> = <span class="hljs-title">average</span><span class="hljs-params">(inputArg)</span></span><br><span class="hljs-comment">%AVERAGE 向量元素求均值</span><br><span class="hljs-comment">%   单纯求均值,为示例子函数而写</span><br>N=<span class="hljs-built_in">length</span>(inputArg);<br>output=GGBOND(inputArg,N)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hh</span>=<span class="hljs-title">GGBOND</span><span class="hljs-params">(X,N)</span>        </span><br>hh=sum(X)/N;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&gt;&gt; x<span class="hljs-operator">=</span>[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span>]<span class="hljs-comment">;</span><br>&gt;&gt; average(x)<br><span class="hljs-attribute">output</span> <span class="hljs-operator">=</span><br><span class="hljs-number">3.5000</span><br><br><span class="hljs-attribute">ans</span> <span class="hljs-operator">=</span><br><span class="hljs-number">3.5000</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="③函数句柄">③函数句柄</h3><p>函数句柄的作用是将一个函数封装成一个变量，使其能够像其它变量一样在程序的不同部分传递。<br>语法：<code>@函数名fun1 = @sin;</code></p><h1>二、Matlab程序的控制语句</h1><h2 id="1-顺序语句">1.顺序语句</h2><p>自不待言。</p><h2 id="2-选择结构">2.选择结构</h2><h3 id="①if-语句">①<code>if</code> 语句</h3><ul><li>单分支if语句</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">if</span>   condition<br>     语句组<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><ul><li><p>双分支if语句</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">if</span>   condition<br>     语句组<span class="hljs-number">1</span><br><span class="hljs-keyword">else</span><br>        语句组<span class="hljs-number">2</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li><li><p>多分支if语句</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">if</span>   条件<span class="hljs-number">1</span><br>     语句组<span class="hljs-number">1</span><br><span class="hljs-keyword">elseif</span>   条件<span class="hljs-number">2</span><br>       语句组<span class="hljs-number">2</span><br>       ……<br><span class="hljs-keyword">elseif</span>   条件m<span class="hljs-number">-1</span><br>       语句组m<span class="hljs-number">-1</span><br><span class="hljs-keyword">else</span><br>       语句组m<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="②switch语句">②<code>switch</code>语句</h3></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">switch</span> 表达式<br><span class="hljs-keyword">case</span> 表达式值<span class="hljs-number">1</span><br>语句组<span class="hljs-number">1</span><br><span class="hljs-keyword">case</span> 表达式值<span class="hljs-number">2</span><br>语句组<span class="hljs-number">2</span><br>……<br><span class="hljs-keyword">case</span> 表达式值m<span class="hljs-number">-1</span><br>语句组m<span class="hljs-number">-1</span><br><span class="hljs-keyword">otherwise</span><br>语句组m<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>当表达式的值等于表达式m-1的值时，执行语句组m-1;<br>当表达式的值不等于case所列的表达式的值时，执行语句组m;<br>当任意一个分支的语句执行完后，直接执行switch语句的下一句;</p><h3 id="③try语句">③<code>try</code>语句</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">try</span> <br>    语句组<span class="hljs-number">1</span><br><span class="hljs-keyword">catch</span><br>    语句组<span class="hljs-number">2</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>try语句先试探性执行语句组1，如果语句组1在执行过程中出现错误，则将错误信息赋给保留的lasterr变量，并转去执行语句组2。</p><h2 id="3-循环结构">3.循环结构</h2><h3 id="①for语句">①for语句</h3><ul><li><p>第一种表示方式</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">for 循环变量 <span class="hljs-operator">=</span> 初值：步长：终值<br>     循环体语句<br>end<br></code></pre></td></tr></table></figure><p>eg.一个求水仙花数的示例</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">for</span> m=<span class="hljs-number">100</span>:<span class="hljs-number">999</span><br>m1=<span class="hljs-built_in">floor</span>(m/<span class="hljs-number">100</span>); <span class="hljs-comment">%求m的百位数字</span><br>m2=<span class="hljs-built_in">rem</span>(<span class="hljs-built_in">floor</span>(m/<span class="hljs-number">10</span>),<span class="hljs-number">10</span>); <span class="hljs-comment">%求m的十位数字</span><br>m3=<span class="hljs-built_in">rem</span>(m,<span class="hljs-number">10</span>); <span class="hljs-comment">%求m的个位数字 rem求余数</span><br><span class="hljs-keyword">if</span> m==m1*m1*m1+m2*m2*m2+m3*m3*m3<br><span class="hljs-built_in">disp</span>(m) <span class="hljs-comment">%显示变量</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>输出：<br>153<br>370<br>371<br>407</p><ul><li><p>第二种表达方式</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">for 循环变量 <span class="hljs-operator">=</span> 矩阵表达式<br>     循环体语句<br>end<br></code></pre></td></tr></table></figure><p>执行过程是依次将矩阵的各列元素赋给循环变量，然后执行循环体语句，直至各列元素处理完毕。</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">for</span> v = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>;<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>]<br>   <span class="hljs-built_in">disp</span>(v)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab"> <span class="hljs-number">1</span><br> <span class="hljs-number">5</span><br> <span class="hljs-number">8</span><br><br> <span class="hljs-number">2</span><br> <span class="hljs-number">6</span><br> <span class="hljs-number">9</span><br><br> <span class="hljs-number">3</span><br> <span class="hljs-number">7</span><br><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><p> </p><p>求矩阵每行元素之和</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">s=<span class="hljs-number">0</span>;<br>a=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>;<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>];<br><span class="hljs-keyword">for</span> k=a<br>s=s+k;<br><span class="hljs-keyword">end</span><br>s;<br></code></pre></td></tr></table></figure><p>k(1)=[1 5 8];<br>k(2)=[2 6 9];<br>k(3)=[3 7 10];</p><h3 id="②while-语句">②while 语句</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">while</span> (条件)<br>        循环体语句<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="4-交互语句">4.交互语句</h2><h3 id="（1）输入输出控制命令-input">（1）输入输出控制命令(input)</h3><p><code>R=input('xxx')</code>:在屏幕上显示提示信息xxx，等待输入数据并赋值给R</p><p><code>keyboard</code>:停止执行程序，将控制权交给键盘，等待用户输入并在命令提示符前显示K以示区别</p><h3 id="（2）等待用户响应命令-pause">（2）等待用户响应命令(pause)</h3><p><code>pause</code>：终止当前运行的M文件，等待用户按任意键后继续运行。<br><code>pause(n)</code>：在屏幕上显示提示信息xxx，等待n秒继续运行。<br><code>pause on</code>：允许以后的运行过程中使用pause命令。<br><code>pause off</code>：不允许以后的运行过程中使用pause命令</p><h3 id="（3）中断、继续、转向命令">（3）中断、继续、转向命令</h3><p><code>break</code>就是直接跳出该层循环<br><code>continue</code>就是直接进入该层循环的下一次迭代<br><code>return</code>就是直接退出程序或函数返回了<br>大概的关系如下 <code>return&gt;break&gt;continue</code></p><p>验证输入的自然数是不是素数:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs matlab">m=input(<span class="hljs-string">&#x27;请输入数字&#x27;</span>)<br>k=<span class="hljs-built_in">sqrt</span>(m);<br>ii=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">while</span> ii<br>ii<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">rem</span>(m,ii)==<span class="hljs-number">0</span><br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span><br>ii=ii+<span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">if</span> ii&gt;k<br><span class="hljs-string">&#x27;输入的是素数&#x27;</span><br><span class="hljs-keyword">return</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-string">&#x27;输入的不是素数&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab基础(五)可视化功能</title>
      <link href="/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E4%BA%94-%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8A%9F%E8%83%BD/"/>
      <url>/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E4%BA%94-%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>@<a href="Matlab%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8A%9F%E8%83%BD">TOC</a></p><h1>一、图形图窗常用命令</h1><h2 id="1-图形窗口操作命令">1. 图形窗口操作命令</h2><p><img src="1.png" alt=""></p><h3 id="hold-on"><code>hold on</code></h3><p> 保持当前图形，并允许在当前图状态下，用同样的缩放比例加入另一个图形。<br><code>hold off</code><br> 释放图形窗口，将hold on状态下加入的新图形作为当前图形<br><code>hold</code><br> 在hold on 和 hold off两种状态下进行切换<br><code>is hold</code><br> 测试当前图形的hold状态。若是hold on状态，则显示1；若hold off状态，则显示0.</p><h3 id="subplot：子图函数"><code>subplot</code>：子图函数</h3><ul><li><blockquote><p>==subplot(m,n,p)== 将当前图窗划分为 m×n 网格，并在 p 指定的位置创建坐标区。——==subplot(mnp)==</p></blockquote></li><li><blockquote><p>subplot(m,n,p,==‘replace’==) 删除位置 p 处的现有坐标区并创建新坐标区。（默认就会覆盖原图）</p></blockquote><pre><code class="hljs">  子窗口的编号是从左至右、再从上到下进行编号</code></pre><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br>x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>);<br>y1 = <span class="hljs-built_in">sin</span>(x);<br><span class="hljs-built_in">plot</span>(x,y1)<br>title(<span class="hljs-string">&#x27;Subplot 1: sin(x)&#x27;</span>)<br><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br>y2 = <span class="hljs-built_in">sin</span>(<span class="hljs-number">2</span>*x);<br><span class="hljs-built_in">plot</span>(x,y2)<br>title(<span class="hljs-string">&#x27;Subplot 2: sin(2x)&#x27;</span>)<br><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>y3 = <span class="hljs-built_in">sin</span>(<span class="hljs-number">4</span>*x);<br><span class="hljs-built_in">plot</span>(x,y3)<br>title(<span class="hljs-string">&#x27;Subplot 3: sin(4x)&#x27;</span>)<br><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>)<br>y4 = <span class="hljs-built_in">sin</span>(<span class="hljs-number">8</span>*x);<br><span class="hljs-built_in">plot</span>(x,y4)<br>title(<span class="hljs-string">&#x27;Subplot 4: sin(8x)&#x27;</span>)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="2.png" alt=""><br> <br>可绘制大小不同的子图：</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<br>x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-3.8</span>,<span class="hljs-number">3.8</span>);<br>y_cos = <span class="hljs-built_in">cos</span>(x);<br><span class="hljs-built_in">plot</span>(x,y_cos);<br>title(<span class="hljs-string">&#x27;Subplot 1: Cosine&#x27;</span>)<br><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br>y_poly = <span class="hljs-number">1</span> - x.^<span class="hljs-number">2.</span>/<span class="hljs-number">2</span> + x.^<span class="hljs-number">4.</span>/<span class="hljs-number">24</span>;<br><span class="hljs-built_in">plot</span>(x,y_poly,<span class="hljs-string">&#x27;g&#x27;</span>);<br>title(<span class="hljs-string">&#x27;Subplot 2: Polynomial&#x27;</span>)<br><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]);<br><span class="hljs-built_in">plot</span>(x,y_cos,<span class="hljs-string">&#x27;b&#x27;</span>,x,y_poly,<span class="hljs-string">&#x27;g&#x27;</span>);<br>title(<span class="hljs-string">&#x27;Subplot 3 and 4: Both&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="3.png" alt=""></p><pre><code class="hljs">单窗口模式相当于subplot(1,1,1)</code></pre><p>推荐使用：<br><code>tiledlayout</code></p><h2 id="2-坐标轴、刻度和图形窗口">2.坐标轴、刻度和图形窗口</h2><h3 id="axis"><code>axis</code></h3><pre><code class="hljs">设定坐标轴范围和纵横比</code></pre><ul><li>axis(limits) 指定当前坐标区的范围。以包含 4 个、6 个或 8 个元素的向量形式指定范围。<br><code>axis([0 2*pi -1.5 1.5])</code>——更改坐标轴范围，使 x 轴的范围从 0 到 2π，y 轴的范围从 -1.5 到 1.</li><li>axis style 使用预定义样式设置轴范围和尺度。<br>style — 坐标轴范围和尺度<br><code>tight | padded | fill | equal | image | square | vis3d | normal</code><br>详见doc文档</li><li>axis mode 设置 MATLAB® 是否自动选择范围<br>mode — 用来确定坐标轴范围的手动、自动或半自动选择<br><code>manual | auto | 'auto x' | 'auto y' | 'auto z' | 'auto xy' | 'auto xz' | 'auto yz'</code><br>详见doc</li><li>axis visibility，其中 visibility 为 off，即关闭坐标区背景的显示。而坐标区中的绘图仍会显示。visibility 的默认值为 on，即显示坐标区背景。</li><li>axis(axis)固定坐标轴刻度，即当图形窗口位于hold on状态下也不该百年坐标轴刻度。<br> <br><img src="4.png" alt=""><br>  <br> </li></ul><h2 id="3-线型、点型及颜色参数">3.线型、点型及颜色参数</h2><p><img src="5.png" alt=""><br> </p><h1>二、二维绘图</h1><h2 id="1-数据曲线图">1.数据曲线图</h2><h3 id="plot函数"><code>plot</code>函数</h3><ul><li><p><code>plot(X,Y,LineSpec)</code> 使用指定的线型、标记和颜色创建绘图。</p></li><li><p><code>plot(X1,Y1,LineSpec1,...,Xn,Yn,LineSpecn) </code>可为每个 x-y 对组指定特定的线型、标记和颜色。您可以对某些 x-y 对组指定 LineSpec，而对其他对组省略它。例如，<code>plot(X1,Y1,&quot;o&quot;,X2,Y2)</code> 对第一个 x-y 对组指定标记，但没有对第二个对组指定标记。</p></li><li><p>指定线型、颜色和标记<br><code>plot(x,y1,'g',x,y2,'b--o',x,y3,'c*')</code>——第一条曲线使用绿色线条，不带标记。第二条曲线使用蓝色虚线，带圆形标记。第三条曲线只使用青蓝色星号标记。</p></li><li><p>指定线宽、标记大小和标记颜色</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = -<span class="hljs-built_in">pi</span>:<span class="hljs-built_in">pi</span>/<span class="hljs-number">10</span>:<span class="hljs-built_in">pi</span>;<br>y = <span class="hljs-built_in">tan</span>(<span class="hljs-built_in">sin</span>(x)) - <span class="hljs-built_in">sin</span>(<span class="hljs-built_in">tan</span>(x));<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(x,y,<span class="hljs-string">&#x27;--gs&#x27;</span>,...<br>    <span class="hljs-string">&#x27;LineWidth&#x27;</span>,<span class="hljs-number">2</span>,...<br>    <span class="hljs-string">&#x27;MarkerSize&#x27;</span>,<span class="hljs-number">10</span>,...<br>    <span class="hljs-string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,...<br>    <span class="hljs-string">&#x27;MarkerFaceColor&#x27;</span>,[<span class="hljs-number">0.5</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">0.5</span>])<br></code></pre></td></tr></table></figure><p><code>MarkerSize</code>等详见doc文档</p></li><li><p>添加标题和轴标签</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">150</span>);<span class="hljs-number">0</span><br>y = <span class="hljs-built_in">cos</span>(<span class="hljs-number">5</span>*x);<br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(x,y,<span class="hljs-string">&#x27;Color&#x27;</span>,[<span class="hljs-number">0</span>,<span class="hljs-number">0.7</span>,<span class="hljs-number">0.9</span>])<br><br>title(<span class="hljs-string">&#x27;2-D Line Plot&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;cos(5x)&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-函数曲线图">2. 函数曲线图</h2><h3 id="fplot"><code>fplot</code></h3><ul><li><p><code>fplot(f,xinterval)</code> 将在指定区间绘图。将区间指定为 <code>[xmin xmax]</code> 形式的二元素向量。</p></li><li><p>fplot(funx,funy) 在默认区间 [-5 5]（对于 t）绘制由 <code>x = funx(t)</code> 和 <code>y = funy(t)</code> 定义的曲线。</p></li><li><p><code>fplot(funx,funy,tinterval)</code> 将在指定区间绘图。将区间指定为 <code>[tmin tmax]</code> 形式的二元素向量。</p></li><li><p><code>fplot(___,LineSpec)</code> 指定线型、标记符号和线条颜色。例如，<code>'-r'</code> 绘制一根红色线条。在上述语法中的任何输入参数组合后使用此选项。</p><h2 id="3-极坐标图和对数坐标图">3.极坐标图和对数坐标图</h2></li><li><p><code>grid on</code> 打开背景网格</p></li><li><p><code>grid off</code> 关闭背景网络</p><h4 id="polar极坐标函数"><code>polar</code>极坐标函数</h4></li><li><p><code>polar(wheta,rho)</code> 绘制极坐标函数<code>rho=f(theta)</code>的图像，S确定曲线的线型、点型、颜色<br>推荐使用<code>polarplot</code><br>详见doc文档</p><h4 id="loglog：双对数刻度图"><code>loglog</code>：双对数刻度图</h4></li><li><p><code>loglog(X,Y) </code>在 x 轴和 y 轴上应用以 10 为底的对数刻度来绘制 x 和 y 坐标。</p></li><li><p><code>loglog(X,Y,LineSpec)</code> 使用指定的线型、标记和颜色创建绘图。</p></li><li><p><code>loglog(X1,Y1,LineSpec1,...,Xn,Yn,LineSpecn) </code>可为每个 x-y 对组指定特定的线型、标记和颜色。您可以对某些 x-y 对组指定 LineSpec，而对其他对组省略它。例如，<code>loglog(X1,Y1,'o',X2,Y2)</code> 对第一个 x-y 对组指定标记，但没有对第二个对组指定标记。</p><h4 id="semilogx：对数坐标"><code>semilogx</code>：对数坐标</h4><p><code>semilogx(y)</code>：绘制单轴对数坐标图形，纵轴为线性坐标，横轴为对数坐标。<br> </p></li></ul><h2 id="4-条形图">4.条形图</h2><h3 id="bar-y"><code>bar(y)</code></h3><pre><code class="hljs">bar(y) 创建一个条形图，y 中的每个元素对应一个条形。</code></pre><ul><li>要绘制单个条形序列，请将 y 指定为长度为 m 的向量。这些条形沿 x 轴从 1 到 m 依次放置。</li><li>要绘制多个条形序列，请将 y 指定为矩阵，每个序列对应一列。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">y = [<span class="hljs-number">75</span> <span class="hljs-number">91</span> <span class="hljs-number">105</span> <span class="hljs-number">123.5</span> <span class="hljs-number">131</span> <span class="hljs-number">150</span> <span class="hljs-number">179</span> <span class="hljs-number">203</span> <span class="hljs-number">226</span> <span class="hljs-number">249</span> <span class="hljs-number">281.5</span>];<br>bar(y)<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">y = [<span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>; <span class="hljs-number">2</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span>; <span class="hljs-number">2</span> <span class="hljs-number">8</span> <span class="hljs-number">9</span>; <span class="hljs-number">2</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span>];<br>bar(y)<br></code></pre></td></tr></table></figure><pre><code class="hljs">bar(x,y) 在 x 指定的位置绘制条形。</code></pre><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">1900</span>:<span class="hljs-number">10</span>:<span class="hljs-number">2000</span>;<br>y = [<span class="hljs-number">75</span> <span class="hljs-number">91</span> <span class="hljs-number">105</span> <span class="hljs-number">123.5</span> <span class="hljs-number">131</span> <span class="hljs-number">150</span> <span class="hljs-number">179</span> <span class="hljs-number">203</span> <span class="hljs-number">226</span> <span class="hljs-number">249</span> <span class="hljs-number">281.5</span>];<br>bar(x,y)<br></code></pre></td></tr></table></figure><p>注：<code>bar</code>还可以有第三个参数，进行各种其他细节操作，详见doc</p><p> </p><h2 id="5-火柴杆图">5.火柴杆图</h2><h3 id="stem-y"><code>stem(y)</code></h3><pre><code class="hljs">stem(Y) 将数据序列 Y 绘制为从沿 x 轴的基线延伸的针状图。各个数据值由终止每个针状图的圆指示。</code></pre><ul><li><p>如果 Y 是向量，x 轴的刻度范围是从 1 至 length(Y)。</p></li><li><p>如果 Y 是矩阵，则 stem 将根据相同的 x 值绘制行中的所有元素，并且 x 轴的刻度范围是从 1 至 Y 中的行数。</p><p><code>stem(x,y)</code>可指定，x轴显示范围</p><p>其他更多用法见doc<br> </p></li></ul><h2 id="6-饼图-pie">6.饼图(pie)</h2><h3 id="pie-x"><code>pie(x)</code></h3><pre><code class="hljs">pie(X) 使用 X 中的数据绘制饼图。饼图的每个扇区代表 X 中的一个元素。</code></pre><ul><li><p>如果 sum(X) ≤ 1，X 中的值直接指定饼图扇区的面积。如果 sum(X) &lt; 1，pie 仅绘制部分饼图。</p></li><li><p>如果 sum(X) &gt; 1，则 pie 通过 X/sum(X) 对值进行归一化，以确定饼图的每个扇区的面积。</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; X = [<span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">0.5</span> <span class="hljs-number">2.5</span> <span class="hljs-number">2</span>];<br>pie(X)<br></code></pre></td></tr></table></figure><p><img src="6.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">X = <span class="hljs-number">1</span>:<span class="hljs-number">3</span>;<br>labels = &#123;<span class="hljs-string">&#x27;Taxes&#x27;</span>,<span class="hljs-string">&#x27;Expenses&#x27;</span>,<span class="hljs-string">&#x27;Profit&#x27;</span>&#125;;<br>pie(X,labels)<br></code></pre></td></tr></table></figure><p><code>labels</code>可以改变饼图的文本标签</p><p>设置图例：</p><p>在元胞数组 labels 中指定每个饼图扇区的说明。按照您在 x 中指定数据的顺序指定说明。</p><p><code>labels = &#123;'Product A','Product B','Product C'&#125;;</code></p><p>在饼图下方显示水平图例。将包含在 labels 中的说明传递给 legend 函数。将图例的 Location 属性设置为 “southoutside”，并将其 Orientation 属性设置为 “horizontal”。</p><p><code>legend(labels,'Location','southoutside','Orientation','horizontal')</code><br> </p><h2 id="7-散点图-scatter">7.散点图(scatter)</h2><h3 id="scatter-x-y-Sz-c"><code>scatter(x,y,Sz,c)</code></h3><pre><code class="hljs">在向量 x 和 y 指定的位置创建一个包含圆形标记的散点图</code></pre><ul><li>要绘制一组坐标，请将 x 和 y 指定为等长向量;</li><li>要在同一组坐标区上绘制多组坐标，请将 x 或 y 中的至少一个指定为矩阵。</li></ul><p><code>Sz</code>——指定圆圈大小<br><code>c</code>——指定圆颜色</p><p> <br>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">200</span>);<br>y = <span class="hljs-built_in">cos</span>(x) + <span class="hljs-built_in">rand</span>(<span class="hljs-number">1</span>,<span class="hljs-number">200</span>);<br>c = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-built_in">length</span>(x));<br><span class="hljs-built_in">scatter</span>(x,y,[],c)<br></code></pre></td></tr></table></figure><p><img src="7.png" alt=""></p><h2 id="8-数据直方图">8.数据直方图</h2><h3 id="hist"><code>hist</code></h3><p><code>hist(x)</code></p><ul><li>基于向量 x 中的元素创建直方图条形图。x 中的元素有序划分入 x 轴上介于 x 的最小值和最大值间的 10 个等间距 bin 中。</li><li>hist 将 bin 显示为矩形，这样每个矩形的高度就表示 bin 中的元素数量。</li><li>若<code>x</code>为一个矩阵，则逐列操作</li></ul><p><code>N = hist(Y,M)</code><br><code>M</code>是一个标量，表明使用<code>M</code>个箱子。（就像上面所说的如果不指定，默认是10个箱子）<br><code>N = hist(Y,X)</code><br>其中x是一个向量，返回x的长度个以x的元素为中心的容器内的，Y的分布情况。</p><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">data=<span class="hljs-built_in">randn</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1e5</span>);<br>x=[<span class="hljs-number">-10</span>:<span class="hljs-number">0.01</span>:<span class="hljs-number">10</span>];<br>y=hist(data,x);<br>N=<span class="hljs-built_in">length</span>(data);<br>y=y/N;<br>y1=y/<span class="hljs-number">0.01</span>;<br>y2=<span class="hljs-number">1</span>/<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>)*<span class="hljs-built_in">exp</span>(-x.^<span class="hljs-number">2.</span>/<span class="hljs-number">2</span>);<br><span class="hljs-built_in">figure</span>;<span class="hljs-built_in">plot</span>(y1);<span class="hljs-built_in">hold</span> on ;<span class="hljs-built_in">plot</span>(y2);<br></code></pre></td></tr></table></figure><p><img src="8.png" alt=""><br> <br> </p><h1>三、三维绘图</h1><h2 id="1-三维网格图和曲面图">1.三维网格图和曲面图</h2><h3 id="meshgrid"><code>meshgrid</code></h3><pre><code class="hljs">二维或三维网络</code></pre><ul><li><p><code>[X,Y] = meshgrid(x,y)</code> 基于向量 x 和 y 中包含的坐标返回二维网格坐标。X 是一个矩阵，每一行是 x 的一个副本；Y 也是一个矩阵，每一列是 y 的一个副本。坐标 X 和 Y 表示的网格有 length(y) 个行和 length(x) 个列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">1</span>:<span class="hljs-number">3</span>;<br>y = <span class="hljs-number">1</span>:<span class="hljs-number">5</span>;<br>[X,Y] = <span class="hljs-built_in">meshgrid</span>(x,y)<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">X =<br><br> <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br> <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br> <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br> <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br> <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>Y =</p><p>1     1     1<br>2     2     2<br>3     3     3<br>4     4     4<br>5     5     5</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">  <br></code></pre></td></tr></table></figure></li></ul><p>例子：绘制曲面图</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">-2</span>:<span class="hljs-number">0.25</span>:<span class="hljs-number">2</span>;<br>[X,Y] = <span class="hljs-built_in">meshgrid</span>(x);<br>F = X.*<span class="hljs-built_in">exp</span>(-X.^<span class="hljs-number">2</span>-Y.^<span class="hljs-number">2</span>);<br>surf(X,Y,F)<br></code></pre></td></tr></table></figure><p><img src="9.png" alt=""></p><ul><li><p><code>[X,Y,Z] = meshgrid(x,y,z)</code> 返回由向量 x、y 和 z 定义的三维网格坐标。X、Y 和 Z 表示的网格的大小为 <code>length(y)×length(x)×length(z)</code>。<br> <br> </p><h3 id="mesh"><code>mesh</code></h3><p>网格曲面图</p></li></ul><p><code>mesh(X,Y,Z) </code>创建一个网格图，该网格图为三维曲面，有实色边颜色，无面颜色。该函数将矩阵 Z 中的值绘制为由 X 和 Y 定义的 x-y 平面中的网格上方的高度。边颜色因 Z 指定的高度而异。</p><p><code>mesh(___,C)</code> 进一步指定边的颜色。</p><p>例子：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">[X,Y] = <span class="hljs-built_in">meshgrid</span>(<span class="hljs-number">-8</span>:<span class="hljs-number">.5</span>:<span class="hljs-number">8</span>);<br>R = <span class="hljs-built_in">sqrt</span>(X.^<span class="hljs-number">2</span> + Y.^<span class="hljs-number">2</span>) + <span class="hljs-built_in">eps</span>;<br>Z = <span class="hljs-built_in">sin</span>(R)./R;<br>mesh(X,Y,Z)<br></code></pre></td></tr></table></figure><p><img src="10.png" alt=""><br> </p><h2 id="2-三维曲线图">2.三维曲线图</h2><h3 id="plot3-x-y-z-S"><code>plot3(x,y,z,S)</code></h3><pre><code class="hljs">三维曲线图</code></pre><p>以参数S确定的线型属性绘制三维点集（Xi,Yi,Zi）确定的曲线。<br><code>x,y,z</code>为相同大小的向量或矩阵。<br> </p><h2 id="3-三维条形图">3.三维条形图</h2><h3 id="bar3"><code>bar3</code></h3><p>eg.</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">y = [<span class="hljs-number">1950</span> <span class="hljs-number">1960</span> <span class="hljs-number">1970</span> <span class="hljs-number">1980</span> <span class="hljs-number">1990</span>];<br>z = [<span class="hljs-number">16</span> <span class="hljs-number">8</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span>];<br>bar3(y,z)<br></code></pre></td></tr></table></figure><p><img src="11.png" alt=""><br> <br> </p><h2 id="4-三维散点图">4.三维散点图</h2><h3 id="scatter3-X-Y-Z-S"><code>scatter3(X,Y,Z,S)</code></h3><p>在 X、Y 和 Z 指定的位置显示圆圈,S指定圆圈大小</p><h2 id="5-三维等值线图">5.三维等值线图</h2><h3 id="contour3"><code>contour3</code></h3><p> <br> <br> </p><h1>四、其他绘图命令</h1><h3 id="imagesc"><code>imagesc</code></h3><pre><code class="hljs">使用缩放颜色显示图像</code></pre><h3 id="contour"><code>contour</code></h3><pre><code class="hljs">矩阵的等高线图</code></pre><h3 id="imwrite"><code>imwrite</code></h3><pre><code class="hljs">将图像写入图形文件</code></pre><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 保存 imagesc 生成的图像</span><br>imagesc(x, y, Z);<br>colorbar;<br>title(<span class="hljs-string">&#x27;x^2 + y^2&#x27;</span>);<br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;y&#x27;</span>);<br>imagesc_img = getframe(gcf); <span class="hljs-comment">% 获取图像数据</span><br>imwrite(imagesc_img.cdata, <span class="hljs-string">&#x27;imagesc_plot.png&#x27;</span>); <span class="hljs-comment">% 使用 imwrite 保存图像</span><br><br><span class="hljs-comment">% 保存 contour 生成的图像</span><br><span class="hljs-built_in">figure</span>;<br>contour(X, Y, Z);<br>colorbar;<br>title(<span class="hljs-string">&#x27;Contour Plot of x^2 + y^2&#x27;</span>);<br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;y&#x27;</span>);<br>contour_img = getframe(gcf); <span class="hljs-comment">% 获取图像数据</span><br>imwrite(contour_img.cdata, <span class="hljs-string">&#x27;contour_plot.png&#x27;</span>); <span class="hljs-comment">% 使用 imwrite 保存图像</span><br></code></pre></td></tr></table></figure><p><img src="12.png" alt=""><br><img src="13.png" alt=""></p><h3 id="plotyy"><code>plotyy</code></h3><pre><code class="hljs">双纵轴绘图</code></pre><h3 id="stairs"><code>stairs</code></h3><pre><code class="hljs">阶梯图</code></pre><h3 id="area"><code>area</code></h3><pre><code class="hljs">面积图</code></pre><h3 id="compass"><code>compass</code></h3><pre><code class="hljs">矢量图</code></pre><h3 id="text"><code>text</code></h3><pre><code class="hljs">在图中添加文本</code></pre><h3 id="x-y-z-sphere-n"><code>[x,y,z]=sphere(n)</code></h3><pre><code class="hljs">绘制球体</code></pre><h3 id="shading-interp"><code>shading interp</code></h3><pre><code class="hljs">连续曲面</code></pre><h3 id="peaks"><code>peaks</code></h3><pre><code class="hljs">测试三维绘图</code></pre><h3 id="Alpha"><code>Alpha</code></h3><pre><code class="hljs">设置透明度</code></pre><h3 id="Imread"><code>Imread</code></h3><pre><code class="hljs">将图片读为数组</code></pre>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab基础(四)符号计算</title>
      <link href="/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E7%AC%A6%E5%8F%B7%E8%AE%A1%E7%AE%97/"/>
      <url>/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E7%AC%A6%E5%8F%B7%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<ul><li>MATLAB中，符号表达式有==符号函数==和==符号方程==两种</li><li>字符就是符号变量的值</li><li>符号表达式被表示为字符串或者字符串组</li></ul><h1>1.符号变量\表达式的定义  <code>syms</code></h1><p>符号变量通过命令<code>syms</code>定义，可同时定义多个<br>Matlab系统有默认的符号自变量,主要为：<code>x,x1,y,y1,z,v,u,t,theta,alpha</code></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms x y u v <br>f=x*<span class="hljs-built_in">log</span>(x)+y*u<br></code></pre></td></tr></table></figure><h1>2.符号矩阵的运算</h1><p><img src="1.png" alt=""><br><img src="2.png" alt=""><br><img src="3.png" alt=""><br><img src="4.png" alt=""></p><h1>3.符号表达式运算</h1><h3 id="1-基本运算">(1)基本运算</h3><h4 id="collect-S-v-——-按指定变量v的次数对符号多项式S合并同类项"><code>collect(S,v)</code>—— 按指定变量<code>v</code>的次数对符号多项式<code>S</code>合并同类项</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">collect(x^<span class="hljs-number">2</span>*y+y*x-x^<span class="hljs-number">2</span><span class="hljs-number">-2</span>*x)<span class="hljs-comment">%此处默认x为符号变量</span><br><span class="hljs-built_in">ans</span> = (y - <span class="hljs-number">1</span>)*x^<span class="hljs-number">2</span> + (y - <span class="hljs-number">2</span>)*x<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">collect(x^<span class="hljs-number">2</span>*y+y*x-x^<span class="hljs-number">2</span><span class="hljs-number">-2</span>*x,y)<span class="hljs-comment">%此处选择y为符号变量</span><br>        <span class="hljs-built_in">ans</span> =(x^<span class="hljs-number">2</span> + x)*y - x^<span class="hljs-number">2</span> - <span class="hljs-number">2</span>*x<br></code></pre></td></tr></table></figure><h4 id="expand-S-——-将符号表达式S展开"><code>expand(S)</code> —— 将符号表达式<code>S</code>展开</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms x<br>p = (x - <span class="hljs-number">2</span>)*(x - <span class="hljs-number">4</span>);<br>expand(p)<br><br><span class="hljs-built_in">ans</span> =<br>    x^<span class="hljs-number">2</span> - <span class="hljs-number">6</span>*x + <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h4 id="factor-x-——-将符号表达式x因式分解。"><code>factor(x)</code> —— 将符号表达式<code>x</code>因式分解。</h4><h4 id="N-D-numden-A-求符号表达式A的分子N和分母D"><code>[N,D]=numden(A)</code> % 求符号表达式A的分子N和分母D</h4><h4 id="simplify——对符号表达式S进行化简"><code>simplify</code>——对符号表达式S进行化简</h4><h4 id="size——求矩阵的维数"><code>size</code>——求矩阵的维数</h4><h3 id="2-符号变量的操作">(2)符号变量的操作</h3><h4 id="symvar"><code>symvar</code></h4><p>C = symvar(expr)搜索表达式 expr，查找除 i、j、pi、inf、nan、eps 和公共函数之外的标识符。这些标识符是表达式中变量的名称。</p><h4 id="subs-S-old-new"><code>subs(S,old,new)</code></h4><p>用变量new替换符号表达式或者符号矩阵S中的变量old</p><pre><code class="hljs"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">  &gt;&gt; syms a  b<br>&gt;&gt; subs(a*b^<span class="hljs-number">2</span>,a*b,<span class="hljs-number">5</span>)<br><span class="hljs-built_in">ans</span> =<br><span class="hljs-number">5</span>*b<br></code></pre></td></tr></table></figure></code></pre><hr><p>（已被淘汰）</p><ul><li>findsym(S):求符号表达式或符号矩阵S中的符号变量</li></ul><hr><h3 id="3-符号函数计算">(3)符号函数计算</h3><h4 id="conj-A"><code>conj(A)</code></h4><p>求符号复数A的共轭复数<br><code>real(Z)</code>——求符号复数的实部<br><code>imag(Z)</code>—— 求符号复数的虚部</p><h4 id="compose"><code>compose</code></h4><p>compose(f,g)，求f=f(y),g=g(x)的复合函数<code>f[g(x)]</code><br>当函数自变量不清晰时，可用:<br>compose(f,g,y,x) —— 指明<code>f</code>是变量<code>y</code>的函数，<code>g</code>是变量<code>x</code>的函数<br>compose(f,g,y,x,z) —— 将最终的复合函数自变量替换为<code>z</code></p><pre><code class="hljs"><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; f=a^<span class="hljs-number">3</span>+b<br>f =<br>a^<span class="hljs-number">3</span> + b<br>&gt;&gt; g=<span class="hljs-number">2</span>*x^<span class="hljs-number">3</span>+<span class="hljs-built_in">sin</span>(y)<br>g =<br><span class="hljs-number">2</span>*x^<span class="hljs-number">3</span> + <span class="hljs-built_in">sin</span>(y)<br>&gt;&gt; compose(f,g,b,x,z)<br><span class="hljs-built_in">ans</span> =<br>a^<span class="hljs-number">3</span> + <span class="hljs-number">2</span>*z^<span class="hljs-number">3</span> + <span class="hljs-built_in">sin</span>(y)<br></code></pre></td></tr></table></figure></code></pre><ul><li><code>finverse</code><br>g=finverse(f)——求符号函数<code>f</code>的反函数<code>g</code><br>g=finverse(f,v)——求符号函数<code>f</code>对指定自变量<code>v</code>的反函数<code>g</code></li></ul><h3 id="4-符号多项式">(4)符号多项式</h3><h4 id="r-poly2sym-P-v-按指定变量v将数值系数向量p转化为符号变量多项式r"><code>r=poly2sym(P,v)</code>:按指定变量<code>v</code>将数值系数向量<code>p</code>转化为符号变量多项式<code>r</code></h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; f=poly2sym([<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> ],x)<br>f =<br>x^<span class="hljs-number">4</span> + <span class="hljs-number">2</span>*x^<span class="hljs-number">3</span> + <span class="hljs-number">3</span>*x^<span class="hljs-number">2</span> + <span class="hljs-number">4</span>*x + <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p> </p><h1>4.符号微积分</h1><h3 id="（1）符号函数的极限">（1）符号函数的极限</h3><p><code>limit(F,x,a)</code>——计算当<code>x</code>趋向于<code>a</code>时，符号表达式<code>F</code>的极限值；<br><code>limit(F,x,a,'right')</code>——计算当<code>x</code>趋向于<code>a</code>时，符号表达式<code>F</code>的右极限值；<br><code>limit(F,x,a,'left')</code>——计算当<code>x</code>趋向于<code>a</code>时，符号表达式<code>F</code>的左极限值；</p><p>注：极限用<code>inf</code>表示</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms x<br>&gt;&gt; limit(<span class="hljs-built_in">atan</span>(x),x,-<span class="hljs-built_in">inf</span>)<br><br><span class="hljs-built_in">ans</span> =<br><br>-<span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p> </p><h3 id="（2）符号函数的导数">（2）符号函数的导数</h3><h4 id="diff-S-v-n-计算符号表达式S对自变量v的n阶导数。"><code>diff(S,v,n)</code>:计算符号表达式<code>S</code>对自变量<code>v</code>的<code>n</code>阶导数。</h4><p>（v,n可忽略）<br>例子：求二元函数</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle displaystyle="false" scriptlevel="0"><mfrac><mrow><mn>2</mn><mi>x</mi><mi>y</mi></mrow><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\tfrac{2xy}{x^2+y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3783em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8972em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>的两个一阶偏导数和三个二阶偏导数:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms x y<br>&gt;&gt; S=(<span class="hljs-number">2</span>*x*y)/(x^<span class="hljs-number">2</span>+y^<span class="hljs-number">2</span>)<br>S =<br>(<span class="hljs-number">2</span>*x*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)<br><br>&gt;&gt; DIF_X_1=diff(S,x,<span class="hljs-number">1</span>)<br>DIF_X_1 =<br>(<span class="hljs-number">2</span>*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>) - (<span class="hljs-number">4</span>*x^<span class="hljs-number">2</span>*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span><br><br>&gt;&gt; DIF_Y_1=diff(S,y,<span class="hljs-number">1</span>)<br>DIF_Y_1 =<br>(<span class="hljs-number">2</span>*x)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>) - (<span class="hljs-number">4</span>*x*y^<span class="hljs-number">2</span>)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span><br><br>&gt;&gt; DIF_X_2=diff(S,x,<span class="hljs-number">2</span>)<br>DIF_X_2 =<br>(<span class="hljs-number">16</span>*x^<span class="hljs-number">3</span>*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">3</span> - (<span class="hljs-number">12</span>*x*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span><br><br>&gt;&gt; DIF_Y_2=diff(S,y,<span class="hljs-number">2</span>)<br>DIF_Y_2 =<br>(<span class="hljs-number">16</span>*x*y^<span class="hljs-number">3</span>)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">3</span> - (<span class="hljs-number">12</span>*x*y)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span><br><br>&gt;&gt; DIF_XY_2=diff(DIF_X_1,y)<br>DIF_XY_2 =<br><span class="hljs-number">2</span>/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>) - (<span class="hljs-number">4</span>*x^<span class="hljs-number">2</span>)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span> - (<span class="hljs-number">4</span>*y^<span class="hljs-number">2</span>)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">2</span> + (<span class="hljs-number">16</span>*x^<span class="hljs-number">2</span>*y^<span class="hljs-number">2</span>)/(x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span>)^<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p> </p><h3 id="（3）符号函数的积分">（3）符号函数的积分</h3><h4 id="int-S-v-对符号表达式S中的指定变量v求S的不定积分"><code>int(S,v)</code>对符号表达式<code>S</code>中的指定变量<code>v</code>求<code>S</code>的不定积分</h4><h4 id="int-S-v-a-b-对符号表达式S中的指定变量v在区间-a-b-上，求S的定积分"><code>int(S,v,a,b)</code>对符号表达式<code>S</code>中的指定变量<code>v</code>在区间<code>[a,b]</code>上，求<code>S</code>的定积分</h4><p>例子：计算不定积分</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∫</mo><mtext> </mtext></msub><msup><mi>e</mi><mrow><mn>2</mn><mi>x</mi></mrow></msup><mi>c</mi><mi>o</mi><mi>s</mi><mn>3</mn><mi>x</mi><mi>d</mi><mi>x</mi><mtext> </mtext><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(x) = \int_\ e^{2x}cos3xdx\,.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2719em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.9119em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mspace mtight"><span class="mtight"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">cos</span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">.</span></span></span></span></span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; f=<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)*<span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x)<br>f =<br><span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x)*<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)<br>&gt;&gt; F=int(f,x)<br>F =<br>(<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)*(<span class="hljs-number">2</span>*<span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x) + <span class="hljs-number">3</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">3</span>*x)))/<span class="hljs-number">1</span><br><br><span class="hljs-comment">%验证正确性</span><br>&gt;&gt; diff(F)<br><span class="hljs-built_in">ans</span> =<br>(<span class="hljs-number">2</span>*<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)*(<span class="hljs-number">2</span>*<span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x) + <span class="hljs-number">3</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">3</span>*x)))/<span class="hljs-number">13</span> + (<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)*(<span class="hljs-number">9</span>*<span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x) - <span class="hljs-number">6</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">3</span>*x)))/<span class="hljs-number">13</span><br><br>&gt;&gt; simplify (<span class="hljs-built_in">ans</span>)<br><span class="hljs-built_in">ans</span> =<br><span class="hljs-built_in">cos</span>(<span class="hljs-number">3</span>*x)*<span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>*x)<br></code></pre></td></tr></table></figure><p> </p><h3 id="（4）级数求和与函数的级数展开">（4）级数求和与函数的级数展开</h3><h4 id="symsum-S-v-a-b-：对符号表达式S中的指定变量v从a到b求和。"><code>symsum(S,v,a,b)</code>：对符号表达式<code>S</code>中的指定变量<code>v</code>从<code>a</code>到<code>b</code>求和。</h4><p>例子：求和</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>…</mo><mo>+</mo><mi>n</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>k</mi></mrow><annotation encoding="application/x-tex">1+2+3+……+n=\sum_{k = 1}^{n} k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms k n<br>&gt;&gt; F1 = symsum(k,k,<span class="hljs-number">1</span>,n)<br>F1 =<br>(n*(n + <span class="hljs-number">1</span>))/<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p> </p><h4 id="T-taylor（f，var，a）近似于-f，在点-var-a-处用-f-的泰勒级数展开。"><code>T = taylor（f，var，a）</code>近似于<code> f</code>，在点 <code>var = a</code> 处用 <code>f</code> 的泰勒级数展开。</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms x<br>T1 = taylor(<span class="hljs-built_in">exp</span>(x))<br></code></pre></td></tr></table></figure><p><img src="5.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">T2 = taylor(<span class="hljs-built_in">sin</span>(x))<br></code></pre></td></tr></table></figure><p><img src="6.png" alt=""><br>（默认展开5阶）<br> </p><p> </p><h3 id="（5）符号函数求解">（5）符号函数求解</h3><h4 id="solve函数——方程和系统求解器"><code>solve函数</code>——方程和系统求解器</h4><p><code>solve(eq,v)</code>：对指定变量v求解方程eq的根。</p><p><img src="7.png" alt=""></p><p>指定<code>v</code>时：<br><img src="8.png" alt=""><br> <br> <br> <br>==<code>solve</code>函数也可以求解方程组与不等式。==</p><ul><li>求解多个变量时，将输出存储在结构数组中比存储在单独的变量中更方便。</li><li>当您指定单个输出参数并且存在多个输出时，solve 函数将返回一个结构。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms u v<br>eqns = [<span class="hljs-number">2</span>*u + v == <span class="hljs-number">0</span>, u - v == <span class="hljs-number">1</span>];<br>S = solve(eqns,[u v])<br>S = <br> 包含以下字段的 struct:<br>u: <span class="hljs-number">1</span>/<span class="hljs-number">3</span><br>v: <span class="hljs-number">-2</span>/<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p> <br>例子：<br><img src="9.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms u v<br>eqns = [<span class="hljs-number">2</span>*u^<span class="hljs-number">2</span> + v^<span class="hljs-number">2</span> == <span class="hljs-number">0</span>, u - v == <span class="hljs-number">1</span>];<br>vars = [v u];<br>[solv, solu] = solve(eqns,vars)<br></code></pre></td></tr></table></figure><p><img src="10.png" alt=""><br> <br> <br> </p><ul><li><p>==解决高阶多项式方程==<br>解决高阶多项式方程时，<code>solve</code>函数可能返回含root的隐式解，尝试通过使用<code>“MaxDegree”</code>调用求解器来获得此类方程的显式解。该选项指定求解器尝试返回显式解的最大多项式次数。默认值为 <code>2</code>。增加此值，您可以获得高阶多项式的显式解。<br><img src="11.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms x<br>p = x^<span class="hljs-number">3</span> + <span class="hljs-number">3</span>*x - <span class="hljs-number">16</span>;<br>R = solve(p,x)<br>R =<br>root(z^<span class="hljs-number">3</span> + <span class="hljs-number">3</span>*z - <span class="hljs-number">16</span>, z, <span class="hljs-number">1</span>)<br>root(z^<span class="hljs-number">3</span> + <span class="hljs-number">3</span>*z - <span class="hljs-number">16</span>, z, <span class="hljs-number">2</span>)<br>root(z^<span class="hljs-number">3</span> + <span class="hljs-number">3</span>*z - <span class="hljs-number">16</span>, z, <span class="hljs-number">3</span>)<br>&gt;&gt; Rexplicit = solve(p,x,<span class="hljs-string">&quot;MaxDegree&quot;</span>,<span class="hljs-number">3</span>)<br>Rexplicit =<br>                                                                     (<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>) - <span class="hljs-number">1</span>/(<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)<br><span class="hljs-number">1</span>/(<span class="hljs-number">2</span>*(<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)) - (<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)/<span class="hljs-number">2</span> - (<span class="hljs-number">3</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>)*(<span class="hljs-number">1</span>/(<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>) + (<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>))*<span class="hljs-number">1</span><span class="hljs-built_in">i</span>)/<span class="hljs-number">2</span><br><span class="hljs-number">1</span>/(<span class="hljs-number">2</span>*(<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)) - (<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)/<span class="hljs-number">2</span> + (<span class="hljs-number">3</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>)*(<span class="hljs-number">1</span>/(<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>) + (<span class="hljs-number">65</span>^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>) + <span class="hljs-number">8</span>)^(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>))*<span class="hljs-number">1</span><span class="hljs-built_in">i</span>)/<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li></ul><p> <br> <br> </p><ul><li>==solve函数可以求解不等式并返回满足不等式的解==。解决以下不等式<br><img src="12.png" alt=""></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; syms x y<br>eqn1 = x &gt; <span class="hljs-number">0</span>;<br>eqn2 = y &gt; <span class="hljs-number">0</span>;<br>eqn3 = x^<span class="hljs-number">2</span> + y^<span class="hljs-number">2</span> + x*y &lt; <span class="hljs-number">1</span>;<br>eqns = [eqn1 eqn2 eqn3];<br><br>S = solve(eqns,[x y],<span class="hljs-string">&#x27;ReturnConditions&#x27;</span>,<span class="hljs-built_in">true</span>);<br>&gt;&gt; S<br>S = <br>  包含以下字段的 struct:<br><br>             x: (- <span class="hljs-number">3</span>*v^<span class="hljs-number">2</span> + u)^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>)/<span class="hljs-number">2</span> - v/<span class="hljs-number">2</span><br>             y: v<br>    parameters: [u    v]<br>    conditions: <span class="hljs-number">4</span>*v^<span class="hljs-number">2</span> &lt; u &amp; u &lt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">0</span> &lt; v<br></code></pre></td></tr></table></figure><p> </p><h4 id="fsolve函数——对非线性方程组求解"><code>fsolve函数</code>——对非线性方程组求解</h4><p><code>x = fsolve(fun,x0)</code> 从 <code>x0</code> 开始，尝试求解方程 <code>fun(x) = 0</code>（全零数组）。</p><p>需要一个函数文件 root2d.m</p><p><img src="13.png" alt=""></p><h3 id="（6）符号积分变换">（6）符号积分变换</h3><p>（学完信号与系统后补充）</p><h4 id="①Laplace变换">①Laplace变换</h4><h4 id="②Z变换">②Z变换</h4><h4 id="③Fourier变换">③Fourier变换</h4>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab基础(三)数值计算</title>
      <link href="/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97/"/>
      <url>/Medipole/Blog/2025/03/18/Matlab%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>@<a href="Matlab%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97">TOC</a></p><h1>一、矩阵运算</h1><h2 id="1-矩阵的加减法">(1)矩阵的加减法</h2><p>矩阵与标量的加减等于矩阵中所有元素与此标量的加减.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; c+<span class="hljs-number">2</span><br>ans =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span><br>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h2 id="2-矩阵的乘法">(2)矩阵的乘法</h2><h3 id="①正常乘（-）">①正常乘（*）</h3><p>C = A*B 是 A 和 B 的矩阵乘积。如果 A 是 m×p 矩阵，B 是 p×n 矩阵，则 C 是通过以下公式定义的 m×n 矩阵：<br><img src="1.png" alt=""></p><h3 id="②数乘（-）">②数乘（*）</h3><p>用这个常数去乘矩阵的每一个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; <span class="hljs-number">3</span>*c<br>ans =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>     <span class="hljs-number">9</span><br>    <span class="hljs-number">12</span>    <span class="hljs-number">15</span>    <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><h3 id="③点乘（-）">③点乘（.*）</h3><p>要求两个矩阵有相同的维数，对应元素相乘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">d =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>     <span class="hljs-number">9</span><br>    <span class="hljs-number">12</span>    <span class="hljs-number">15</span>    <span class="hljs-number">18</span><br>&gt;&gt; c<br>c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; x=d.*c<br>x =<br>     <span class="hljs-number">3</span>    <span class="hljs-number">12</span>    <span class="hljs-number">27</span><br>    <span class="hljs-number">48</span>    <span class="hljs-number">75</span>   <span class="hljs-number">108</span><br></code></pre></td></tr></table></figure><h3 id="④标量积（dot）">④标量积（dot）</h3><p>返回 A 和 B 的标量点积（内积）<br>==语法==：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">C = dot(A,B)<br>C = dot(A,B,dim)<br></code></pre></td></tr></table></figure><p><code>dim</code>：按指定维数dim求两矩阵的标量积<br>沿其运算的维度，指定为正整数标量。如果未指定值，则默认值是大小不等于 1 的第一个数组维度。</p><p>考虑两个二维输入数组：A 和 B：</p><p><code>dot(A,B,1)</code> 将 A 和 B 的列视为向量，并返回对应列的点积。</p><p><code>dot(A,B,2)</code> 将 A 和 B 的行视为向量，并返回对应行的点积。<br><img src="2.png" alt=""></p><p>如果 <code>dim</code> 大于 <code>ndims(A)</code>，则 <code>dot</code> 返回 <code>conj(A).*B</code>。</p><h3 id="⑤向量积（cross）">⑤向量积（cross）</h3><p>返回 A 和 B 的叉积<br><strong>cross(A,B)<br>cross(A,B,dim)</strong></p><h3 id="⑥混合积">⑥混合积</h3><p><strong>dot(A,cross(B,C))</strong></p><h3 id="⑦卷积（conv）">⑦卷积（conv）</h3><p><strong>conv(A,B)</strong></p><h3 id="⑧解卷积">⑧解卷积</h3><p><strong>[q,r]=deconv(B,A)</strong></p><h3 id="⑨张量积（kron）">⑨张量积（kron）</h3><p><strong>kron(A,B)</strong><br> </p><h2 id="3-矩阵的除法">(3)矩阵的除法</h2><pre><code class="hljs">通过矩阵的除法可以求解线性方程组的解</code></pre><h3 id="①左除（-）">①左除（ \ ）</h3><p>当<strong>A</strong>、<strong>B</strong>是线性方程组<strong>AX</strong>=<strong>B</strong>中的系数矩阵和常数矩阵时，<strong>A \ B</strong>是方程组<strong>AX</strong>=<strong>B</strong>的解</p><h3 id="②右除">②右除</h3><p>当<strong>A</strong>、<strong>B</strong>是线性方程组<strong>XA</strong>=<strong>B</strong>中的系数矩阵和常数矩阵时，<strong>B \ A</strong>是方程组<strong>XA</strong>=<strong>B</strong>*的解</p><h3 id="③元素左除">③元素左除</h3><p><strong>A .\ B</strong> 是指<strong>B</strong>的个元素除以A的对应元素</p><h3 id="④元素右除">④元素右除</h3><p><strong>A ./ B</strong> 是指<strong>A</strong>的个元素除以<strong>B</strong>的对应元素</p><h2 id="4-矩阵的乘方">(4)矩阵的乘方</h2><ul><li>矩阵的乘法:<br>调用格式：<code>A^n</code>,<code>n</code>为整数，<code>A</code>是方阵，计算矩阵<code>A</code>的<code>n</code>次方</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">若n&gt;<span class="hljs-number">0</span>，则计算A自乘n次<br>若n=<span class="hljs-number">0</span>，则计算结果为与A同阶的单位阵<br>若n&lt;<span class="hljs-number">0</span>，则计算A的逆矩阵自乘n次<br></code></pre></td></tr></table></figure><p>  若<code>n</code>为非整数，<code>A</code>为方阵</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mi>p</mi><mtext> </mtext><msup><mi>λ</mi><mi>t</mi></msup><msup><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">A=p\ \lambda^{t}p^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p> 其中 lambda为A的特征对角矩阵，p为A的特征向量矩阵</p><ul><li><p>矩阵元素的乘方<br>调用格式：<code>A.^b</code>,<code>b</code>可为非整数，<code>A</code>为方阵，计算<code>A</code>中每一个元素的<code>b</code>次方组成的矩阵。</p></li><li><p>数的矩阵元素的乘方<br>调用格式：<code>b.^A</code>, <code>b</code>为非整数，<code>A</code>为方阵，计算常数b的A的每一个元素次方排成的矩阵</p></li><li><p>数的矩阵乘方:<br>调用格式： <code>b.^A </code>,<code>b</code>为非整数，<code>A</code>为方阵</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mi>p</mi><mtext> </mtext><msup><mi>b</mi><mi>λ</mi></msup><msup><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">A=p\ b^{\lambda}p^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0935em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中 lambda为A的特征对角矩阵，p为A的特征向量矩阵</p></li></ul><h2 id="5-矩阵的操作与变换">(5)矩阵的操作与变换</h2><p><img src="3.png" alt=""></p><p><code>inv(A)</code>:计算非奇异矩阵的逆矩阵<br><code>det(A)</code>:计算方阵的行列式<br><code>rank(A)</code>:计算方阵的秩<br><code>trace(A)</code>:计算方阵的迹<br><code>eig(A)</code>:计算n阶方阵A的特征值<br><code>circshift(A,[m,n])</code>:对A矩阵进行m行，n列的圆周移位</p><h1>二、多项式运算</h1><h2 id="（1）多项式的系数与根">（1）多项式的系数与根</h2><h3 id="①-poly2sym">① poly2sym</h3><p>由多项式的系数得到多项式的表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; p=[<span class="hljs-number">1</span> <span class="hljs-number">0</span> -<span class="hljs-number">5</span> <span class="hljs-number">7</span> -<span class="hljs-number">14</span> <span class="hljs-number">47</span>]<br>p =<br> <span class="hljs-number">1</span>     <span class="hljs-number">0</span>    -<span class="hljs-number">5</span>     <span class="hljs-number">7</span>   -<span class="hljs-number">14</span>    <span class="hljs-number">47</span><br>&gt;&gt; poly2sym(p)<br>ans =<br>x^<span class="hljs-number">5</span> - <span class="hljs-number">5</span>*x^<span class="hljs-number">3</span> + <span class="hljs-number">7</span>*x^<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*x + <span class="hljs-number">47</span><br></code></pre></td></tr></table></figure><h3 id="②poly（r）">②poly（r）</h3><p>由此 MATLAB 函数（其中 r 是向量）返回多项式的系数，其中多项式的根是 r 的元素</p><h3 id="③fzero-‘fun’-x0">③fzero(‘fun’,x0):</h3><p>计算由函数fun=0决定的方程的根。<br>x0为常数时，计算x0附近的根；<br>如果x0为区间，计算区间内的根，若此区间无根，则输出错误信息。</p><pre><code class="hljs">求余弦函数在 1 和 2 之间的零点。</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">fun = @cos; % function<br>x0 = [<span class="hljs-number">1</span> <span class="hljs-number">2</span>]; % initial interval<br>x = fzero(fun,x0)<br>x = <span class="hljs-number">1.5708</span><br></code></pre></td></tr></table></figure><p>请注意，cos(1) 和 cos(2) 的符号不同。</p><h3 id="④roots-p">④roots( p )</h3><p>计算多项式<code>p(X)=0</code>的解，结果可以为复数</p><p> <br> </p><h2 id="（2）多项式的值">（2）多项式的值</h2><h3 id="①polyval-p-x">①polyval(p,x)</h3><p>计算多项式 p 在 x 的每个点处的值。</p><h3 id="②-y-delta-polyval-p-x-s">②[y,delta]=polyval(p,x,s)</h3><p>同①，<code>y</code>是多项式的值，<code>delta</code>是根据<code>polyfit</code>命令给出的矩阵<code>s</code>的误差估计向量</p><h3 id="③polyvalm-p-A">③polyvalm(p,A)</h3><p>以矩阵方式返回多项式 p 的计算值，是计算：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mn>0</mn></msub><msup><mi>A</mi><mi>n</mi></msup><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><msup><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>+</mo><mo>…</mo><mo>…</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi>I</mi></mrow><annotation encoding="application/x-tex">P(A)=a_0A^n+a_1A^{n-1}+a_2A^{n-2}+……+a_nI</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8644em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0141em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0141em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></span></p><p> </p><h2 id="（3）多项式的拟合与插值">（3）多项式的拟合与插值</h2><h3 id="①ployfit">①ployfit</h3><p>此 MATLAB 函数 返回次数为 <code>n</code> 的多项式 p(x) 的系数，该阶数是 y 中数据的最佳拟合（基于最小二乘指标）。<br>p 中的系数按降幂排列，p 的长度为 n+1<br>语法：<code>p = polyfit(x,y,n)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">1</span>:<span class="hljs-number">50</span>; <br>y = -<span class="hljs-number">0.3</span>*x + <span class="hljs-number">2</span>*randn(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>); <br>p = polyfit(x,y,<span class="hljs-number">1</span>);% 进行线性回归<br>poly2sym(p)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">ans =<br><br><span class="hljs-number">8881560245387251</span>/<span class="hljs-number">18014398509481984</span> - (<span class="hljs-number">5883261650978903</span>*x)/<span class="hljs-number">18014398509481984</span><br></code></pre></td></tr></table></figure><h3 id="②interp1-x-y-xi-‘method’">②interp1(x,y,xi,‘method’)</h3><p>数据插值是通过已知的有限个数据点，推导出数据点之间未知位置上的数值。<br><code>vq = interp1(x,v,xq,method)</code> 指定备选插值方法：<code>'linear'、'nearest'、'next'、'previous'、'pchip'、'cubic'、'v5cubic'、'makima' 或 'spline'</code>。默认方法为 ‘linear’。</p><p>示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">0</span>:pi/<span class="hljs-number">4</span>:<span class="hljs-number">2</span>*pi; <br>v = sin(x);<br>xq = <span class="hljs-number">0</span>:pi/<span class="hljs-number">16</span>:<span class="hljs-number">2</span>*pi;<br>vq1 = interp1(x,v,xq);<br>plot(x,v,<span class="hljs-string">&#x27;o&#x27;</span>,xq,vq1,<span class="hljs-string">&#x27;:.&#x27;</span>);<br></code></pre></td></tr></table></figure><p>输出<br><img src="4.png" alt=""><br><img src="5.png" alt=""></p><p><code>vq = interp1(x,v,xq,method,extrapolation)</code> 用于指定外插策略，来计算落在 x 域范围外的点。如果希望使用 method 算法进行外插，可将 extrapolation 设置为 <code>'extrap'</code>。您也可以指定一个标量值，这种情况下，interp1 将为所有落在 x 域范围外的点返回该标量值。</p><p> <br> </p><h2 id="（4-多项式的运算">（4)多项式的运算</h2><h3 id="①conv-A-B">①conv(A,B)</h3><p>计算多项式<code>A</code>与<code>B</code>的乘积，仍以向量形式输出</p><h3 id="②-q-r-deconv-A-B">②[q,r]=deconv(A,B)</h3><p>计算多项式<code>A</code>与<code>B</code>的商，<code>q</code>为多项式的系数向量，<code>r</code>为<code>A</code>、<code>B</code>相除后的残值多项式系数向量</p><h3 id="③polyder-A">③polyder(A)</h3><p>计算多项式<code>A</code>的导数<br>polyder(A,B)：计算多项式A与B乘积的导数<br>[q,r]=polyder(A,B)：计算多项式A与B的商的导数，其中，q为导数分子多项式的系数向量，r为导数分母多项式的系数向量</p><h3 id="④ployint-A-k">④ployint(A,k)</h3><p>计算多项式A的积分，参数k为积分常数，省略时积分常数为零。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">1</span><br><br>&gt;&gt; b=poly2sym(a)<br>b =<br>x^<span class="hljs-number">2</span> + <span class="hljs-number">2</span>*x + <span class="hljs-number">1</span><br><br>&gt;&gt; c=poly2sym(polyint(a))<br>c =<br>x^<span class="hljs-number">3</span>/<span class="hljs-number">3</span> + x^<span class="hljs-number">2</span> + x<br></code></pre></td></tr></table></figure><h3 id="⑤residue">⑤residue</h3><pre><code class="hljs">[r,p,k] = residue(b,a)</code></pre><p><img src="6.png" alt=""><br>定义较为复杂，可在Matlab中查看示例（<code>help residue</code>）</p><ul><li>例如：使用 <code>residue</code> 求以下多项式之比 <code>F(s)</code> 的部分分式展开式<br><img src="7.png" alt=""></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">b = [-<span class="hljs-number">4</span> <span class="hljs-number">8</span>];<br>a = [<span class="hljs-number">1</span> <span class="hljs-number">6</span> <span class="hljs-number">8</span>];<br>[r,p,k] = residue(b,a)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">r =<br>   -<span class="hljs-number">12</span><br>     <span class="hljs-number">8</span> <br>p =<br>    -<span class="hljs-number">4</span><br>    -<span class="hljs-number">2</span><br>k =<br>     []<br></code></pre></td></tr></table></figure><p><img src="8.png" alt=""></p><p>也可以使用 residue 将部分分式展开转换回多项式系数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">[b,a] = residue(r,p,k)<br></code></pre></td></tr></table></figure><p>此处部分分式展开的计算可以与“<code>信号与系统</code>”中求解单位冲激响应联系起来。</p><p> <br> <br> </p><h1>三、数理统计</h1><h2 id="1-数据的最值与排序">1.数据的最值与排序</h2><h3 id="1-sort-x">(1)sort(x)</h3><p><code>B = sort(A)</code> 按升序对 A 的元素进行排序。</p><ul><li>如果 A 是向量，则 sort(A) 对向量元素进行排序。</li><li>如果 A 是矩阵，则 sort(A) 会将 A 的列视为向量并对每列进行排序。</li><li>如果 A 是多维数组，则 sort(A) 沿大小不等于 1 的第一个数组维度计算，并将这些元素视为向量。</li></ul><p><code>B = sort(A,dim)</code> 返回 A 沿维度 dim 的排序元素。<br>如果 A 是一个矩阵，则 <code>sort(A,2)</code> 对每行中的元素进行排序。</p><p><code>[B,I] = sort(___)</code> 还会为上述任意语法返回一个索引向量的集合。<br>例如，如果 A 是一个向量，则 <code>B = A(I)</code>。</p><p><code>[C,I]=sort(A,'descend')</code>—— 降序排列<br> </p><h3 id="2-sortrows-x-col">(2)sortrows(x,col)</h3><p><code>B = sortrows(A)</code> 基于第一列中的元素按升序对矩阵行进行排序。当第一列包含重复的元素时，sortrows 会根据下一列中的值进行排序，并对后续的相等值重复此行为。</p><p><code>B = sortrows(A,column)</code> 基于向量 column 中指定的列对 A 进行排序。例如，sortrows(A,4) 会基于第四列中的元素按升序对 A 的行进行排序。sortrows(A,[4 6]) 首先基于第四列中的元素，然后基于第六列中的元素，对 A 的行进行排序。<br> </p><h3 id="3-max">(3)max()</h3><p><code>M = max(A)</code> 返回数组的最大元素，如果元素是复数，则求最大模。</p><ul><li><p>如果 A 是向量，则 max(A) 返回 A 的最大值。</p></li><li><p>如果 A 为矩阵，则 max(A) 是包含 A 的每一列的最大值的行向量。</p></li><li><p>如果 A 是多维数组，则 max(A) 沿大小大于 1 的 A 的第一个维度计算，并将这些元素视为向量。此维度中 M 的大小变为 1，而所有其他维度的大小仍与在 A 中相同。如果 A 是第一个维度长度为零的空数组，则 M 是与 A 大小相同的空数组。</p></li><li><p>如果 A 是表或时间表，则 max(A) 返回包含每个变量的最大值的一个单行表。 (自 R2023a 起)</p></li></ul><p><code>M = max(A,[],&quot;all&quot;)</code> 查找 A 的所有元素的最大值。</p><p><code>M = max(A,[],dim)</code> 返回维度 dim 上的最大元素。<br>例如，如果 A 为矩阵，则 max(A,[],2) 返回包含每一行的最大值的列向量。</p><p><code>[M,ind]=max(A)</code>求矩阵A中每一列中最大值组成的行向量M，并给出最大值的行下标向量。</p><p><code>max(A,B)</code>求矩阵A、B中对应元素最大值组成的矩阵<br> </p><h2 id="2-求和、乘积与差分">2.求和、乘积与差分</h2><h3 id="1-sum">(1)sum()</h3><p><code>S = sum(A)</code> 返回沿大小大于 1 的第一个数组维度计算的元素之和。</p><ul><li><p>如果 A 是向量，则 sum(A) 返回元素之和。</p></li><li><p>如果 A 是矩阵，则 sum(A) 将返回包含每列总和的行向量。<br><code>S = sum(A,&quot;all&quot;)</code> 返回 A 的所有元素的总和。</p></li><li><p>如果 A 是多维数组，则 sum(A) 沿大小大于 1 的第一个数组维度计算，并将这些元素视为向量。此维度中 S 的大小变为 1，而所有其他维度的大小仍与在 A 中相同。</p></li><li><p>如果 A 是表或时间表，则 sum(A) 返回一个包含每个变量总和的单行表。 (自 R2023a 起)</p></li></ul><h3 id="2-prod">(2)prod()</h3><p><code>B = prod(A)</code> 返回 A 的数组元素的乘积。</p><ul><li><p>如果 A 是向量，则 prod(A) 返回元素的乘积。</p></li><li><p>如果 A 为非空矩阵，则 prod(A) 将 A 的各列视为向量，并返回一个包含每列乘积的行向量。<br><code>B = prod(A,&quot;all&quot;)</code> 返回 A 的所有元素的乘积。</p></li><li><p>如果 A 为 0×0 空矩阵，prod(A) 返回 1。</p></li><li><p>如果 A 为多维数组，则 prod(A) 沿第一个非单一维度运算并返回乘积数组。此维度中 B 的大小将减少至 1，而所有其他维度的大小仍与在 A 中相同。</p></li><li><p>如果 A 是表或时间表，则 prod(A) 返回每个变量乘积的单行表。 (自 R2023a 起)</p></li></ul><h3 id="3-diff">(3)diff()</h3><p><code>Y = diff(X)</code> 计算沿大小不等于 1 的第一个数组维度的 X 相邻元素之间的差分：</p><ul><li><p>如果 X 是长度为 m 的向量，则 Y = diff(X) 返回长度为 m-1 的向量。Y 的元素是 X ==相邻元素之间的差分==。<br><code>Y = [X(2)-X(1) X(3)-X(2) ... X(m)-X(m-1)]</code></p></li><li><p>如果 X 是不为空的非向量 p×m 矩阵，则 Y = diff(X) 返回大小为 <code>(p-1)×m</code> 的矩阵，其元素是 X 的==行之间的差分==。<br><code>Y = [X(2,:)-X(1,:); X(3,:)-X(2,:); ... X(p,:)-X(p-1,:)]</code></p></li><li><p>如果 X 是 0×0 的空矩阵，则 Y = diff(X) 返回 0×0 的空矩阵。</p></li></ul><h2 id="3-平均值、中值与标准差">3.平均值、中值与标准差</h2><ul><li>mean(x)  —— 计算向量x元素的算数平均数</li><li>median(x) —— 计算向量x元素的中位数</li><li>std(x) —— 计算向量x元素的标准差</li></ul><p>(各类用法与sum等十分相似)</p><h2 id="4-协方差与相关系数">4.协方差与相关系数</h2><ul><li>cov(x) —— 计算向量 x 的协方差</li><li>cov(x,y) —— 计算两个向量x,y的协方差</li><li>cov(A) —— 计算矩阵A的协方差矩阵</li><li>correoef(A) —— 计算矩阵A的相关系数矩阵</li><li>corrcoef (x,y) —— 计算两个向量x,y的相关系数</li></ul><h2 id="5-数据处理">5.数据处理</h2><ul><li>ceil —— 向上取整</li><li>floor —— 向下取整</li><li>fix —— 向零取整</li><li>round —— 四舍五入</li><li>mod(x,y) —— 取余数</li><li>rem(x,y)—— 取余数<br>(当x和y的正负号一样的时候，两个函数结果是等同的；当x和y的符号不同时，<code>rem</code>函数结果的符号和<code>x</code>的一样，而<code>mod</code>和<code>y</code>一样。)</li><li>abs(x) —— 对数据取模</li><li>angle(x) —— 对数据取相位</li><li>phase(x) —— 对数据取相位并解卷绕</li><li>real(x) —— 对数据取实部</li><li>imag(x) —— 对数据取虚部</li></ul>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB基础(二)向量与矩阵</title>
      <link href="/Medipole/Blog/2025/03/18/MATLAB%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E5%90%91%E9%87%8F%E4%B8%8E%E7%9F%A9%E9%98%B5/"/>
      <url>/Medipole/Blog/2025/03/18/MATLAB%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E5%90%91%E9%87%8F%E4%B8%8E%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<p>@<a href="MATLAB%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89%E7%AC%94%E8%AE%B0">TOC</a></p><p>一个矩阵的维数为<code>r x c</code>,其中<code>r</code>为行向量的个数，<code>c</code>是列向量的个数。</p><h2 id="1-行向量与列向量">1.行向量与列向量</h2><h3 id="1-创建行向量">(1)创建行向量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; v=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span>]<br><br>v =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br><br>&gt;&gt; w=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><br>w =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p> </p><h3 id="2-冒号运算符和Linspace函数">(2)冒号运算符和Linspace函数</h3><p>若向量中的值有规律，可用冒号运算符循环访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; v=<span class="hljs-number">1</span>:<span class="hljs-number">9</span><br><br>v =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span>     <span class="hljs-number">9</span><br><br>&gt;&gt; v=<span class="hljs-number">1</span>:<span class="hljs-number">2</span>:<span class="hljs-number">9</span><br><br>v =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><ul><li>其中<code>v=1:2:9</code>中的<code>2</code>为步长</li><li>在此情况下，不需要用 [ ] 来定义向量<br> </li></ul><p><code>linspace</code>函数创建一个线性间隔的空间，<code>linspace(x,y,n)</code>创建一个从<code>x</code>到<code>y</code>有<code>n</code>个值的向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; linspace(<span class="hljs-number">3</span>,<span class="hljs-number">100</span>,<span class="hljs-number">4</span>)<br><br>ans =<br><br>    <span class="hljs-number">3.0000</span>   <span class="hljs-number">35.3333</span>   <span class="hljs-number">67.6667</span>  <span class="hljs-number">100.0000</span><br></code></pre></td></tr></table></figure><p> </p><p><code>logsapce</code>函数创建一个对数间隔的向量，<code>logspace(x,y,n)</code>创建一个从<code>x^10</code>到<code>y^10</code>有<code>n</code>个值的向量,<br>若n被忽略，则默认为100个点。</p><p> </p><h3 id="3-引用与修改元素">(3)引用与修改元素</h3><pre><code class="hljs">MATLAB中索引从1开始</code></pre><p>1 2 3 4 5 6 7 8 9 10</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; v<br><br>v =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span><br><br>&gt;&gt; v(<span class="hljs-number">3</span>)<br><br>ans =<br><br>     <span class="hljs-number">5</span><br><br>&gt;&gt; c=v(<span class="hljs-number">2</span>:<span class="hljs-number">5</span>)<br><br>c =<br><br>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><p>任何向量都可以通过索引送入另一个向量，索引不需要按顺序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; v([<span class="hljs-number">1</span> <span class="hljs-number">5</span> <span class="hljs-number">3</span>])<br><br>ans =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">9</span>     <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><ul><li>向量<code>[1 5 3]</code>被称为索引向量，指定的是原始向量</li><li>通过指定向量中的索引或下标，可以改变向量元素中存储的值：<code>v[4]=10</code></li><li>通过引用一个现状还不存在的向量，可以拓展一个向量</li><li>如果向量的结尾和指定的元素之间还有空，则用<code>0</code>填充</li></ul><h3 id="4-创建列向量">(4)创建列向量</h3><p>可以通过将值放在方括号中，用分号（  ；）隔开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; b=[<span class="hljs-number">1</span>;<span class="hljs-number">2</span>;<span class="hljs-number">3</span>;<span class="hljs-number">4</span>;<span class="hljs-number">5</span>]<br>b =<br>     <span class="hljs-number">1</span><br>     <span class="hljs-number">2</span><br>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span><br>     <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p> <br>没有直接的方法使用冒号运算符得到列向量，但可以通过==转置==</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; r=<span class="hljs-number">1</span>:<span class="hljs-number">3</span><br>r =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>&gt;&gt; c=r.<span class="hljs-string">&#x27;</span><br><span class="hljs-string">c =</span><br><span class="hljs-string">     1</span><br><span class="hljs-string">     2</span><br><span class="hljs-string">     3</span><br></code></pre></td></tr></table></figure><ul><li><p><code>c'</code>——共轭转置</p></li><li><p><code>c.'</code>——转置<br> <br> </p></li></ul><h2 id="2-矩阵变量">2.矩阵变量</h2><h3 id="1-创建矩阵变量">(1)创建矩阵变量</h3><pre><code class="hljs">行向量的值用空格或逗号隔开，不同的行用分号隔开</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; mat=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]<br>mat =<br>   <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>   <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><ul><li><p>每行值的个数必须相等</p></li><li><p>行里能使用冒号运算符</p></li><li><p>不同行间也可以使用回车键替代分号</p></li></ul><h3 id="2-创建特殊矩阵的函数">(2)创建特殊矩阵的函数</h3><h4 id="①zeros函数">①zeros函数</h4><p>产生全0矩阵，即零矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; zeros(<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h4 id="②ones函数">②ones函数</h4><p>产生全1的矩阵，即幺矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; ones(<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="③eye函数">③eye函数</h4><p>产生对角线为1的矩阵。当矩阵为方阵时，得到一个单位矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; eye(<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="④rand函数">④rand函数</h4><p>产生（0,1）区间均匀分布的随机矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; rand(<span class="hljs-number">3</span>)<br>ans =<br>    <span class="hljs-number">0.8147</span>    <span class="hljs-number">0.9134</span>    <span class="hljs-number">0.2785</span><br>    <span class="hljs-number">0.9058</span>    <span class="hljs-number">0.6324</span>    <span class="hljs-number">0.5469</span><br>    <span class="hljs-number">0.1270</span>    <span class="hljs-number">0.0975</span>    <span class="hljs-number">0.9575</span><br></code></pre></td></tr></table></figure><p>也可以传递两个参数明确指定行列数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; rand(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>ans =<br>    <span class="hljs-number">0.9649</span>    <span class="hljs-number">0.9706</span>    <span class="hljs-number">0.4854</span><br>    <span class="hljs-number">0.1576</span>    <span class="hljs-number">0.9572</span>    <span class="hljs-number">0.8003</span><br></code></pre></td></tr></table></figure><h4 id="⑤randi函数">⑤randi函数</h4><p>使用<code>randi</code>能够生成随机整数矩阵,并且可以指定范围与生成矩阵的维数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; randi([<span class="hljs-number">20</span>,<span class="hljs-number">30</span>],<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>ans =<br>    <span class="hljs-number">21</span>    <span class="hljs-number">30</span>    <span class="hljs-number">30</span><br>    <span class="hljs-number">24</span>    <span class="hljs-number">28</span>    <span class="hljs-number">27</span><br>&gt;&gt; randi([<span class="hljs-number">10</span>,<span class="hljs-number">20</span>],<span class="hljs-number">2</span>)<br>ans =<br>    <span class="hljs-number">10</span>    <span class="hljs-number">20</span><br>    <span class="hljs-number">19</span>    <span class="hljs-number">17</span><br></code></pre></td></tr></table></figure><h4 id="⑥randn函数">⑥randn函数</h4><p>产生均值为0，方差为1的标准正态分布随机矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; randn(<span class="hljs-number">3</span>)<br>ans =<br>   -<span class="hljs-number">0.2414</span>   -<span class="hljs-number">0.8649</span>    <span class="hljs-number">0.6277</span><br>    <span class="hljs-number">0.3192</span>   -<span class="hljs-number">0.0301</span>    <span class="hljs-number">1.0933</span><br>    <span class="hljs-number">0.3129</span>   -<span class="hljs-number">0.1649</span>    <span class="hljs-number">1.1093</span><br></code></pre></td></tr></table></figure><h4 id="⑦magic函数">⑦magic函数</h4><p>幻方矩阵：产生行、列、对角线和相等的方阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; magic(<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">8</span>     <span class="hljs-number">1</span>     <span class="hljs-number">6</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">9</span>     <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h4 id="⑧diag函数">⑧diag函数</h4><p>取得矩阵的对角线元素，或生成以该向量为对角的矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; magic(<span class="hljs-number">4</span>)<br>ans =<br>    <span class="hljs-number">16</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>    <span class="hljs-number">13</span><br>     <span class="hljs-number">5</span>    <span class="hljs-number">11</span>    <span class="hljs-number">10</span>     <span class="hljs-number">8</span><br>     <span class="hljs-number">9</span>     <span class="hljs-number">7</span>     <span class="hljs-number">6</span>    <span class="hljs-number">12</span><br>     <span class="hljs-number">4</span>    <span class="hljs-number">14</span>    <span class="hljs-number">15</span>     <span class="hljs-number">1</span><br>&gt;&gt; diag(ans)<br>ans =<br>    <span class="hljs-number">16</span><br>    <span class="hljs-number">11</span><br>     <span class="hljs-number">6</span><br>     <span class="hljs-number">1</span><br>&gt;&gt; diag(ans)<br>ans =<br>    <span class="hljs-number">16</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>    <span class="hljs-number">11</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">6</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>通过<code>diag(a,n)</code>中的<code>n</code>也可以控制取得对角线平行线上的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; diag(magic(<span class="hljs-number">4</span>),<span class="hljs-number">1</span>)<br>ans =<br>     <span class="hljs-number">2</span><br>    <span class="hljs-number">10</span><br>    <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p>类似的有：<br><code>triu(A)</code>函数，生成上三角矩阵（为A中对应元素），其余元素为0<br><code>tril(A)</code>函数,生成下三角矩阵，其余元素为0</p><h3 id="3-引用与修改矩阵元素">(3)引用与修改矩阵元素</h3><h4 id="①下标索引">①下标索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; mat=[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>;<span class="hljs-number">3</span>:<span class="hljs-number">5</span>]<br>mat =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span><br>&gt;&gt; mat(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">5</span><br>&gt;&gt; mat(<span class="hljs-number">1</span>:<span class="hljs-number">2</span>,<span class="hljs-number">2</span>:<span class="hljs-number">3</span>)<br>ans =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><blockquote><p>注意创建矩阵时使用方括号 [  ]<br>引用矩阵时使用圆括号()</p></blockquote><p>利用冒号 <code>:</code>，可以引用矩阵所有的行和列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">mat =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span><br>&gt;&gt; mat(<span class="hljs-number">1</span>,:)<br>ans =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h4 id="②线性索引">②线性索引</h4><p>MATLAB在内存中存储矩阵是以列为主的顺序分配的（逐列式的），故线性索引提取元素时是按列进行的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<br>   <span class="hljs-number">100</span>    <span class="hljs-number">77</span><br>    <span class="hljs-number">28</span>    <span class="hljs-number">14</span><br><br>&gt;&gt; a(<span class="hljs-number">1</span>)<br>ans =<br>   <span class="hljs-number">100</span><br><br>&gt;&gt; a(<span class="hljs-number">2</span>)<br>ans =<br>    <span class="hljs-number">28</span><br><br>&gt;&gt; a(<span class="hljs-number">3</span>)<br>ans =<br>    <span class="hljs-number">77</span><br><br>&gt;&gt; a(<span class="hljs-number">4</span>)<br>ans =<br>    <span class="hljs-number">14</span><br></code></pre></td></tr></table></figure><h4 id="③修改">③修改</h4><p>一个矩阵的任何子集都能修改，只要将要赋给的子集与被修改的子集具有相同数量的行和列即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; a(<span class="hljs-number">3</span>)=<span class="hljs-number">11</span><br>a =<br>   <span class="hljs-number">100</span>    <span class="hljs-number">11</span><br>    <span class="hljs-number">28</span>    <span class="hljs-number">14</span><br></code></pre></td></tr></table></figure><p>也可以改变一个矩阵的整行或整列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; a(<span class="hljs-number">2</span>,:)=[<span class="hljs-number">2</span> <span class="hljs-number">3</span>]<br>a =<br>   <span class="hljs-number">100</span>    <span class="hljs-number">11</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="4-维数">(4)维数</h3><h4 id="①length函数">①length函数</h4><p>length函数返回向量中元素的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">b =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>&gt;&gt; length (b)<br>ans =<br>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>对于一个矩阵，length函数返回行、列向量中较大的那个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; length(c)<br>ans =<br>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h4 id="②size函数">②size函数</h4><p>size函数返回行、列向量的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; size(c)<br>ans =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>也可以用一个向量来接受这两个返回量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; [m,n]=size(c)<br>m =<br>     <span class="hljs-number">2</span><br>n =<br>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h4 id="③numel函数">③numel函数</h4><p>返回数组（向量或矩阵）所有元素的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; numel(c)<br>ans =<br>     <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p>MATLAB还有一个内置表达end,用来提取向量中的最后一个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; c(<span class="hljs-number">1</span>,end)<br>ans =<br>     <span class="hljs-number">3</span><br>&gt;&gt; c(end)<br>ans =<br>     <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h4 id="④reshape函数">④reshape函数</h4><p>reshape函数可以改变一个矩阵的维数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; magic(<span class="hljs-number">4</span>)<br>ans =<br>    <span class="hljs-number">16</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>    <span class="hljs-number">13</span><br>     <span class="hljs-number">5</span>    <span class="hljs-number">11</span>    <span class="hljs-number">10</span>     <span class="hljs-number">8</span><br>     <span class="hljs-number">9</span>     <span class="hljs-number">7</span>     <span class="hljs-number">6</span>    <span class="hljs-number">12</span><br>     <span class="hljs-number">4</span>    <span class="hljs-number">14</span>    <span class="hljs-number">15</span>     <span class="hljs-number">1</span><br>&gt;&gt; reshape(ans,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>)<br>ans =<br>    <span class="hljs-number">16</span>     <span class="hljs-number">9</span>     <span class="hljs-number">2</span>     <span class="hljs-number">7</span>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>    <span class="hljs-number">13</span>    <span class="hljs-number">12</span><br>     <span class="hljs-number">5</span>     <span class="hljs-number">4</span>    <span class="hljs-number">11</span>    <span class="hljs-number">14</span>    <span class="hljs-number">10</span>    <span class="hljs-number">15</span>     <span class="hljs-number">8</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p> <br>下面介绍几个特殊的==改变矩阵维数==的函数：<br><code>fliplr</code>函数从左到右“翻转”矩阵；<br><code>flipud</code>函数上下”翻转“矩阵；<br><code>rot90</code>函数逆时针90°旋转矩阵<br><code>repmat</code>用来创建一个矩阵：repmat(mat,m,n)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>&gt;&gt; fliplr(a)<br>ans =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">1</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span><br>&gt;&gt; fliplr(ans)<br>ans =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>&gt;&gt; rot90(ans)<br>ans =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>&gt;&gt; repmat(ans,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)<br>ans =<br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="5-空向量">(5)空向量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"> &gt;&gt; evec=[]<br>evec =<br>     []<br>&gt;&gt; length (evec)<br>ans =<br>     <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>可以通过连接给空向量添加值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; evec=[evec <span class="hljs-number">4</span>]<br>evec =<br>     <span class="hljs-number">4</span><br>&gt;&gt; evec=[evec <span class="hljs-number">11</span>]<br>evec =<br>     <span class="hljs-number">4</span>    <span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><p>空向量可用于删除向量中的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">b =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>&gt;&gt; b(<span class="hljs-number">2</span>)=[]<br>b =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h2 id="3-矩阵的基本运算">3.矩阵的基本运算</h2><h3 id="1-矩阵的加减法">(1)矩阵的加减法</h3><p>矩阵与标量的加减等于矩阵中所有元素与此标量的加减.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; c+<span class="hljs-number">2</span><br>ans =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span><br>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="2-矩阵的乘法">(2)矩阵的乘法</h3><h4 id="①正常乘（-）">①正常乘（*）</h4><p>C = A*B 是 A 和 B 的矩阵乘积。如果 A 是 m×p 矩阵，B 是 p×n 矩阵，则 C 是通过以下公式定义的 m×n 矩阵：<br><img src="1.png" alt=""></p><h4 id="②数乘（-）">②数乘（*）</h4><p>用这个常数去乘矩阵的每一个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; <span class="hljs-number">3</span>*c<br>ans =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>     <span class="hljs-number">9</span><br>    <span class="hljs-number">12</span>    <span class="hljs-number">15</span>    <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><h4 id="③点乘（-）">③点乘（.*）</h4><p>要求两个矩阵有相同的维数，对应元素相乘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">d =<br>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>     <span class="hljs-number">9</span><br>    <span class="hljs-number">12</span>    <span class="hljs-number">15</span>    <span class="hljs-number">18</span><br>&gt;&gt; c<br>c =<br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>&gt;&gt; x=d.*c<br>x =<br>     <span class="hljs-number">3</span>    <span class="hljs-number">12</span>    <span class="hljs-number">27</span><br>    <span class="hljs-number">48</span>    <span class="hljs-number">75</span>   <span class="hljs-number">108</span><br></code></pre></td></tr></table></figure><h4 id="④标量积（dot）">④标量积（dot）</h4><p>返回 A 和 B 的标量点积（内积）<br>==语法==：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">C = dot(A,B)<br>C = dot(A,B,dim)<br></code></pre></td></tr></table></figure><p><code>dim</code>：按指定维数dim求两矩阵的标量积<br>沿其运算的维度，指定为正整数标量。如果未指定值，则默认值是大小不等于 1 的第一个数组维度。</p><p>考虑两个二维输入数组：A 和 B：</p><p><code>dot(A,B,1)</code> 将 A 和 B 的列视为向量，并返回对应列的点积。</p><p><code>dot(A,B,2)</code> 将 A 和 B 的行视为向量，并返回对应行的点积。<br><img src="2.png" alt=""></p><p>如果 <code>dim</code> 大于 <code>ndims(A)</code>，则 <code>dot</code> 返回 <code>conj(A).*B</code>。</p><h4 id="⑤向量积（cross）">⑤向量积（cross）</h4><p>返回 A 和 B 的叉积<br><strong>cross(A,B)<br>cross(A,B,dim)</strong></p><h4 id="⑥混合积">⑥混合积</h4><p><strong>dot(A,cross(B,C))</strong></p><h4 id="⑦卷积（conv）">⑦卷积（conv）</h4><p><strong>conv(A,B)</strong></p><h4 id="⑧解卷积">⑧解卷积</h4><p><strong>[q,r]=deconv(B,A)</strong></p><h4 id="⑨张量积（kron）">⑨张量积（kron）</h4><p><strong>kron(A,B)</strong><br> </p><h3 id="3-矩阵的除法">(3)矩阵的除法</h3><h4 id="①左除（-）">①左除（ \ ）</h4><p>当<strong>A</strong>、<strong>B</strong>是线性方程组<strong>AX</strong>=<strong>B</strong>中的系数矩阵和常数矩阵时，<strong>A \ B</strong>是方程组<strong>AX</strong>=<strong>B</strong>的解</p><h4 id="②右除">②右除</h4><p>当<strong>A</strong>、<strong>B</strong>是线性方程组<strong>XA</strong>=<strong>B</strong>中的系数矩阵和常数矩阵时，<strong>B \ A</strong>是方程组<strong>XA</strong>=<strong>B</strong>*的解</p><h4 id="③元素左除">③元素左除</h4><p><strong>A .\ B</strong> 是指<strong>B</strong>的个元素除以A的对应元素</p><h4 id="④元素右除">④元素右除</h4><p><strong>A ./ B</strong> 是指<strong>A</strong>的个元素除以<strong>B</strong>的对应元素</p><h2 id="4、逻辑向量">4、逻辑向量</h2><h3 id="1-逻辑表达式">(1) 逻辑表达式</h3><p>逻辑向量使用产生真/假的关系表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<br><br>     <span class="hljs-number">5</span>     <span class="hljs-number">8</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">8</span><br><br>&gt;&gt; isg=a&gt;<span class="hljs-number">6</span><br><br>isg =<br><br>  <span class="hljs-number">2</span>×<span class="hljs-number">2</span> logical 数组<br><br>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span><br>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>结果是一个0、1组成的向量，可以在该isg向量上进行数值运算，但其类型是逻辑型。</p><p> <br>这个逻辑向量可以用来索引原始向量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; a(isg)<br><br>ans =<br><br>     <span class="hljs-number">8</span><br>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="2-逻辑内置函数">(2)逻辑内置函数</h3><h4 id="①true、false函数">①true、false函数</h4><p>可以创建全逻辑1或0的向量或矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; false(<span class="hljs-number">2</span>)<br><br>ans =<br><br>  <span class="hljs-number">2</span>×<span class="hljs-number">2</span> logical 数组<br><br>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span><br>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span><br><br>&gt;&gt; true (<span class="hljs-number">1</span>,<span class="hljs-number">5</span>)<br><br>ans =<br><br>  <span class="hljs-number">1</span>×<span class="hljs-number">5</span> logical 数组<br><br>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="②any、all函数">②any、all函数</h4><p>任意元素为逻辑真（非零），any函数返回逻辑真<br>所有元素为非零时，all函数返回逻辑真</p><h4 id="③find函数">③find函数</h4><p>find函数返回满足规定条件的索引下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;&gt; find(b&gt;<span class="hljs-number">5</span>)<br><br>ans =<br><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br><br>&gt;&gt; find(a&gt;<span class="hljs-number">4</span>)<br><br>ans =<br><br>     <span class="hljs-number">1</span><br>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>（对矩阵使用线性索引）</p><h4 id="④isequal函数">④isequal函数</h4><p>两向量相等则返回1，否则返回0</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB基础（一）</title>
      <link href="/Medipole/Blog/2025/03/18/MATLAB%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/Medipole/Blog/2025/03/18/MATLAB%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-文件分类">1.文件分类</h2><ul><li>脚本文件——.m</li><li>数据文件——.mat</li></ul><h2 id="2-变量与赋值">2.变量与赋值</h2><ul><li><p>变量区分大小写</p><ul><li><p>语句末尾输入分号可以抑制结果的输出</p></li><li><p>若未定义变量，则运算结果存储至默认变量ans</p></li><li><p>重复使用命令的快捷方式是向上的方向键</p></li><li><p>变量类型</p><blockquote><p>浮点数：single 、double<br>整数类型：int8、int16、int32、int64——数字代表存储该类型所用的二进制位数<br>无符号整数： uint8、uint16、uint32、uint64</p></blockquote></li><li><p>class函数可以用来查看变量类型</p></li></ul></li></ul><h2 id="3-表达式">3.表达式</h2><h3 id="（1）format-函数">（1）format 函数</h3><ul><li><p>format short : 数字小数部分默认显示4位（默认设置）</p></li><li><p>format long : 数字小数部分默认显示15位</p></li><li><p>format loose :语句之间大空格</p></li><li><p>format compact: 语句之间小空格</p></li></ul><h3 id="（2）运算符">（2）运算符</h3><ul><li><p><code> +</code>   加法</p></li><li><p><code>-</code>  减法</p></li><li><p><code>*</code> 乘法</p></li><li><p><code>/</code> 除法（除以：10/5=2）</p></li><li><p><code>\</code> 除法（去除：5\10=2）</p></li><li><p><code>^</code> 幂运算</p></li></ul><h3 id="（3）常见基础内置函数">（3）常见基础内置函数</h3><ul><li><p>abs 函数：绝对值</p></li><li><p>三角函数：</p><blockquote><p>默认状态下使用弧度：sin(pi/6) = sind(30)</p></blockquote><ul><li><p>fix 函数</p><blockquote><p>将 X 的每个元素==朝零方向==四舍五入为最近的整数</p></blockquote></li></ul></li><li><p>floor 函数</p><blockquote><p>将 X 的每个元素四舍五入到==小于或等于==该元素的最接近整数</p></blockquote><ul><li><p>ceil 函数</p><blockquote><p>将 X 的每个元素四舍五入到==大于或等于==该元素的最接近整数</p></blockquote></li></ul></li><li><p>round 函数</p><blockquote><p>将 X 的每个元素四舍五入为最近的整数</p></blockquote></li><li><p>mod函数 和 rem函数</p><blockquote><p>mod(13,5)=3=rem(13,5)<br>当x和y的正负号一样的时候，两个函数结果是等同的；当x和y的符号不同时，rem函数结果的符号和x的一样，而mod和y一样。</p></blockquote></li><li><p>sign函数：</p><blockquote><p>返回与 x 大小相同的数组 Y，其中 Y 的每个元素是： 1，前提是 x 的对应元素大于 0。 0，前提是 x 的对应元素等于 0。 -1，前提是 x 的对应元素小于 0。</p></blockquote></li><li><p>sqrt函数：</p><blockquote><p>计算平方根</p></blockquote></li><li><p>nthroot 函数</p><blockquote><p>用来求n次方根： nthroot （64，3）=4</p></blockquote></li><li><p>log函数</p><blockquote><p>log(x)返回自然对数<br>log2(x)返回以2为底的对数</p></blockquote></li><li><p>exp函数</p><blockquote><p>exp(n)，返回常数e^n</p></blockquote><p>注意：10e2 = 10 *10^2 =1000</p><ul><li><p>rand函数</p><blockquote><p>生成（0,1）区间上均匀分布的随机变量。基本语法：<br>rand([M,N,P …])——生成排列成M<em>N</em>P… 多维向量的随机数。如果只写M，则生成M*M矩阵；<br>如果参数为[M,N]可以省略掉方括号。</p></blockquote></li></ul></li><li><p>randi函数</p><blockquote><p>randi(N) 是生成(0,N]间均匀分布的伪随机数，并且数都是整数，所以每个数是位于1到N之间。它的表达形式有以下几种：<br>R = randi(iMax)            % 生成1：iMax之间的均匀分布随机数<br>R = randi(iMax,m,n)        % 生成m×n的1：iMax之间的均匀分布随机数<br>R = randi([iMin,iMax],m,n) % 生成m×n的iMin:iMax之间的均匀分布随机数</p></blockquote></li><li><p>randn函数</p><blockquote><p>它生成的随机数整体概率为正态分布，均值为0，方差为1<br>R = randn(N)   % 生成N×N个正态分布的随机数<br>R = randn(M,N) % 生成M×N个正态分布的随机数</p></blockquote><p>若需产生指定标准差和方法的随机矩阵，则可将randn产生的结果乘以标准差，然后加上期望均值即可。例如，产生均值为0.6，方差为0.1的一个5*5的随机数方式如下：<br>                 <code>x = .6 + sqrt(0.1) * randn(5)</code></p></li><li><p>normrnd函数</p><blockquote><p>正态分布函数：<code>X = normrnd(mu,sigma,m,n)</code> 返回期望为mu，标准差为sigma的m * n的随机矩阵</p></blockquote></li></ul><h2 id="4-关系表达式">4.关系表达式</h2><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于或等于</td></tr><tr><td>&lt;=</td><td>小于或等于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>~=</td><td>不等于</td></tr><tr><td>||</td><td>or</td></tr><tr><td>&amp;&amp;</td><td>and</td></tr><tr><td>~</td><td>not</td></tr><tr><td>xor()</td><td>异或</td></tr><tr><td>all</td><td>当向量中所有元素非零时为真</td></tr><tr><td>any</td><td>当向量中存在非零元素时为真</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
